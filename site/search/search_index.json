{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting started","text":"<p>Interactive Graph Links ---</p>"},{"location":"#introduction","title":"Introduction","text":"<p>PIC2BIM (EGNSS4ALL) is a geotagging photo mobile phone application, which is Open-Source for IOS and Android.</p> <p>Initially developed by EU Space Programme see http://egnss4cap.eu/ for more information, now being maintained and developed by PIC2BIM.</p> It takes advantage of GNSS raw measurements, European Global Navigation Satellite System (EGNSS) differentiators  <ul> <li>Open Service \u2013 Navigation Message Authentication \u2013 OS-NMA) for trustworthy and accurate geotagging.</li> <li>European Geostationary Navigation Overlay Service (EGNOS)</li> <li>Dual frequency capabilities </li> </ul>"},{"location":"#features","title":"Features","text":"<p>Inside the App, the user can perform several different tasks:</p> <ul> <li>Taking photos, storing the position data (PVT) and representing them on the map</li> <li>Path recording</li> <li>Assisted-NMA architecture providing authenticated positioning</li> <li>Retrieving raw data about a specific point on the map through GNSS Raw Data</li> <li>Having access to GNSS SkyMap, showing the location of the satellites of the four global constellations (GPS, GALILEO, GLONASS, BeiDou) allowing for Two-Line Element (TLA) cross-check</li> </ul> <p>PIC2BIM unique functionalities improve the performance and trustworthiness of smartphone photo geotagging, mapping and tracing, serving multiple domains including urban planning, logistics and insurance.</p> <p>To check if the device that you are using can indeed use all the EGNSS differentiators, the following traffic lights are given as confirmation on your smartphone capabilities:</p> <ul> <li>Location service check: green light if this device has enabled location service and application has permission to use it</li> <li>Galileo capacity check: green light if this device is capable to use Galileo satellites</li> <li>Compass and Gyroscope: green light if this device is capable to use Compass and Gyroscope (Android)</li> <li>EGNOS signal check: green light if this device is capable to use ENOS (Android)</li> <li>Galileo Nav Message Signal check: green light if this device is capable to use OS-NMA (Android)</li> </ul>"},{"location":"#building-information-modelling-bim","title":"Building Information Modelling (BIM)","text":"<p>Future development</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>This  Quick  Start  Guide  provides  a  brief  overview  of  the  main  functionalities  of  the  PIC2BIM application.  Detailed  information  on  the  functionalities  of  the  application  can  be  found  in  the following sections:</p> <ul> <li>Mobile Application - iOS</li> <li>Mobile Application - Android</li> <li>Web Console</li> </ul> <p>The Pic2Bim / Egnss4all application is available at Google Play Store and Apple App Store:</p> <p> </p>"},{"location":"#login","title":"Login","text":"<p>Click the Sign In button to complete the login.</p> <p></p> <p>Fig. 20 Login screen</p> <p>Through the \"Select Server\" button, it will be possible to set the URL of a custom server  that will be used instead of the app's default server.</p> <p>Enter \"https://pic2bim.co.uk/\" and click save.</p> <p></p> <p>Fig. 21 Select Server</p> <ul> <li> <p>Make sure to grant permissions to access the device\u2019s location. For the first login, request a  user  and  password  combination  at  https://pic2bim.co.uk/  or  use  demo (username) and demo (password).</p> </li> <li> <p>After the first login, the credentials will be stored in the device.</p> </li> </ul>"},{"location":"#how-to-make-a-photo","title":"How to Make a Photo","text":"<p>Go to Unassigned Photos/Photos Menu (Fig. 1, for Android devices or Fig. 2 for iOS Devices)</p> <p></p> <p>Fig. 1 Unassigned Photos (Android)</p> <p></p> <p>Fig.2 Photos Menu (iOS)</p> <p>Click on \u201cTAKE PHOTO\u201d and the camera turns on. After a few seconds, the snap photo button appears on the screen (Android). </p> <p> </p> <p>Fig.3 Take a Photo (Android)</p> <p></p> <p>Fig.4 Camera (Android)</p> <p>Click on \u201cNew\u201d and the camera turns on. After a few seconds, the snap photo button appears on the screen (iOS).</p> <p> </p> <p>Fig.5 New Photo (iOS)</p> <p></p> <p>Fig.6 Camera (iOS)</p>"},{"location":"#how-to-see-your-photos","title":"How to see your Photos","text":"<p>Click on \u201cMAP\u201d and the pictures will be displayed in their location on a map (Android).</p> <p> </p> <p>Fig.7 Map (Android)</p> <p></p> <p>Fig.8 Photo Location (Android)</p> <p>Click on \u201cMAP\u201d and the pictures will be displayed in their location on a map (iOS).</p> <p> </p> <p>Fig.9 Map (iOS)</p> <p></p> <p>Fig.10 Photo Location (iOS)</p>"},{"location":"#how-to-send-or-save-to-pdf-your-geotagged-photos","title":"How to SEND or SAVE to PDF your geotagged photos","text":"<p>Click on \u201cSEND\u201d and the pictures will be uploaded to the server (Android and iOS).</p> <p> </p> <p>Fig.11 Send Photo (Android)</p> <p></p> <p>Fig.12 Send Photo (iOS)</p>"},{"location":"#how-to-track-a-path-or-make-a-polygon","title":"How to TRACK a path or MAKE a polygon","text":"<p>Click on \u201cPath Tracking\u201d and then choose between record a new path or browse the paths already recoded and upload them or export to a KML file (Android).</p> <p> </p> <p>Fig.13 Send Photo (Android)</p> <p></p> <p>Fig.14 Send Photo (iOS)</p> <p>Click on \u201cMap Menu\u201d and then choose between record a new path or browse the paths already recoded and upload them or export to a KML file (iOS).</p> <p> </p> <p>Fig.15 Map (iOS)</p> <p></p> <p>Fig.16 Send Photo (iOS)</p>"},{"location":"#how-to-use-the-web-console","title":"How to USE the web console","text":"<p>Using the same credentials than the ones available for the application (demo/demo by default), it\u2019s possible to connect and check the data uploaded from the smartphone (Android and iOS). The URL is https://www.pic2bim.co.uk/ there is the possibility to check the unassigned photos or the paths. Scroll-up to see all the options, in case that you are not able to see the displayed buttons.</p> <p></p> <p>Fig. 17 Web console</p> <p></p> <p>Fig. 18 Available photos</p> <p></p> <p>Fig. 19 Available paths</p>"},{"location":"android/","title":"Mobile Application - iOS","text":"<p>The application for Android phones is distributed via Google Play Store service.</p>"},{"location":"android/#installing-from-apk","title":"Installing from APK","text":"<p>Follow these steps to install the application from an apk file. The details of these steps will vary depending on your version of Android and the manufacturer of your device.</p> <ol> <li> <p>Download the apk file (package) to your phone either by transferring     files via PC or via a mobile web browser</p> </li> <li> <p>Make sure in the settings according to your version of Android that     you are allowed to install third-party applications</p> </li> <li> <p>Use the embedded file manager application on your mobile device,     where the apk file is stored, or download such an application</p> </li> <li> <p>Once you find the apk in the file manager, tap on it to install</p> </li> <li> <p>Follow the instructions in the dialog that appears until the     installation is successful</p> </li> </ol>"},{"location":"android/#compiling-from-source-code","title":"Compiling from source code","text":"<p>The source code and the directory structure are compatible and meet the requirements for the Android Studio project in which it was created.</p> <p>You must have Android Studio installed on your PC to compile the application. Android Studio can be downloaded here: https://developer.android.com/studio.</p> <p>You also need to have Gradle build automation tools, at least version 4.1.2, running in the Android Studio.</p> <p>To build and run an application, open the source code of the application as an Android Studio project and execute the build command and then execute the run command. At the same time, you must also have downloaded all the dependencies and libraries that are ordered by the gradle configuration files.</p> <p>More detailed information on how to compile and work with source codes in Android Studio can be found here: https://developer.android.com/studio/run.</p>"},{"location":"android/#minimum-requirements","title":"Minimum requirements","text":"<p>Android:</p> <ul> <li> <p>Minimal version of Android: 7.0 (API 24)</p> </li> <li> <p>Disk space: 100MB (only a standalone application without a large     amount of user data)</p> </li> <li> <p>RAM: 1GB</p> </li> <li> <p>Sensors: gyroscope, magnetometer, accelerometer</p> </li> <li> <p>Inputs: camera, Wi-Fi or data mobile service, location service</p> </li> <li> <p>Apps: Google Play services</p> </li> </ul>"},{"location":"android/#application-start-and-permissions","title":"Application Start and Permissions","text":"<p>The application can be run on Android devices by selecting it in the list of applications.</p> <p></p> <p>Application icon</p> <p>Upon the first start of the application, user permissions will be requested, which are required to correctly run the application.</p> <ul> <li> <p>Location services</p> <ul> <li> <p>to assign location data to photos</p> </li> <li> <p>to distinguish between various types of location data or signals     on the device</p> </li> <li> <p>to use the path tracking feature</p> </li> </ul> </li> <li> <p>Camera and Video</p> <ul> <li>to use the device camera for the snapshot capturing feature</li> </ul> </li> <li> <p>Make and manage calls</p> <ul> <li>to assign data of the mobile network or the WIFI network to     captured snapshots as input to geotagged information</li> </ul> </li> </ul> <p>In the case that any of mentioned permissions is not allowed by the user, the application is not able to work properly. Thus, the dialog requesting such permissions is shown to the user (Fig. 1). A user is able to invoke the Android system permissions dialog again by clicking the \u201cConfirm Permissions\u201c button. If these dialogs have been banned by the user, there is still the possibility to set permissions in the System settings before the application start. This procedure may vary on different Android devices and system versions.</p> <p> </p> <p>Fig. 1 Permissions request</p>"},{"location":"android/#login","title":"Login","text":"<p>After the first launch of the application and granting all the necessary permissions to the application, the user will be presented with a login screen (Fig. 2), where the assigned login and password will need to be filled out.</p> <p>Click the Sign In button to complete the login.</p> <p> </p> <p>Fig. 2 Login screen</p> <p>The Select Server button allows you to choose the backoffice server to use. It is possible to use the default one or your own.</p> <p> </p> <p>Fig. 3 Select Server</p> <p>To successfully log in, all data most be entered correctly and the device should be connected to the Internet at the time of login. The login details will be remembered for future uses of the app. Re-login will be required only after explicit logout of the user. After each login, the synchronization process (Main screen) starts automatically.</p> <p> </p> <p> </p> <p>Fig. 4 Synchronization</p> <p>The synchronization process allows you to align information between backoffice server and apps</p>"},{"location":"android/#main-screen","title":"Main Screen","text":"<p>In the upper section of the Main screen, the \u201cLogged in user\u201d field can be found, which provides information about the currently logged in user.</p> <p>The attributes of the host device are displayed in the middle of the \u201cBasic Information\u201d section. Traffic lights are displayed next to some of the attributes. Their detailed description is given in the sidebar and can also be found in the About screen.</p> <p></p> <p>Fig. 5 Main screen</p>"},{"location":"android/#traffic-lights","title":"Traffic Lights","text":"<p>Device capabilities show the current ability of the device to receive location data. Green indicates the active ability of the phone to determine its current location. Red means an inability to determine your current position. If this is the case, location services on the device may be disabled. Other attributes use the green or yellow color. Green indicates that the device has that particular property. Yellow indicates that the device does not have the given property or has not yet been able to verify the given availability and may change to green over time. Other items representing the individual properties of the device, which are listed below, can only be green or yellow. Each yellow item may change to green over time. The opposite statement does not apply, and the green item will remain green forever.</p> <p>### User functions</p> <p>To navigate between the different application modules, a main menu opens when you click on the three dots in the upper right corner of the screen. The context menu has the following options:</p> <ul> <li> <p>Synchronize</p> </li> <li> <p>Starts the process of synchronizing data with the server. You cannot     use the application during synchronization and you must be connected     to the internet.</p> </li> </ul> <p>Task Overview</p> <ul> <li>Displays the task list screen</li> </ul> <p>Unassigned Photos</p> <ul> <li>Displays the list of standalone photos, which are not assigned to     the specific task</li> </ul> <p>Map</p> <ul> <li>Changes the screen to the map view with all taken photos</li> </ul> <p>Path Tracking</p> <ul> <li>Changes the screen to the map view for taking new paths or viewing     paths that have already been taken</li> </ul> <p>Settings</p> <ul> <li>Allows the user to change the settings</li> </ul> <p>GNSS Raw Data</p> <ul> <li>Displays an overview of currently received GNSS data</li> </ul> <p>About</p> <ul> <li>Shows basic information about the application</li> </ul> <p>Log out</p> <ul> <li>User log out, reverts to the login screen</li> </ul>"},{"location":"android/#task-list","title":"Task List","text":"<p>In the task overview (Fig. 5), user tasks are listed by name, status, number of captured images, creation date and due date. By clicking on a specific task, a screen with details and options to edit is displayed.</p> <p></p> <p>Fig. 6 Task list  </p> <p>The go-up filter (by tapping the Filter bar at the top of the screen) restricts the task list by task name and status. In the filter, you can also set the sorting of images in the list according to the options offered. When the Expired option is selected, the sort is divided into two depending on whether the due date has passed or not. The sorted list of tasks will be displayed for each group independently. The group of tasks with expired due dates (Due date marked in red in each item in the list) will be included at the end.</p> <p>The filter settings are retained even after the application is closed.</p> <p>Tasks can be set in following states, which also determine their editability:</p> <p>Description</p> <p>Editable</p> <p></p> <p>New A new task</p> <p>YES</p> <p></p> <p>Open</p> <p>A new task, which has been already displayed by the user. The user is aware of the task.</p> <p>YES</p> <p></p> <p>Returned The has been returned by the officer to the user with an additional information request.</p> <p>YES</p> <p></p> <p>Data provided</p> <p>The task which was completed and sent by the user to the PA</p> <p>NO</p> <p></p> <p>Data confirmed (approved task)</p> <p>The completed task has been approved.</p> <p>NO</p> <p></p> <p>Data checked (rejected)</p> <p>The completed task has been rejected.</p> <p>NO</p> <p></p> <p>Closed</p> <p>The task has been closed is not active.</p> <p>NO</p> <p>To ensure that all tasks are current, the user must manually start the synchronization process (M).</p>"},{"location":"android/#task-detail","title":"Task detail","text":"<p>The task detail (Fig. 6) shows the data attributes of the task, including all captured images. Depending on the status of the task, the task can either be edited or viewed.</p> <ul> <li> <p>The upper section lists the basic data attributes of the task.</p> </li> <li> <p>The Instructions section shows the description needed to complete     the task given by an authorized staff member of the Paying Agency.</p> </li> <li> <p>The Reason for return section describes the reason for the Paying     Agency why the task was returned for a new performance.</p> </li> <li> <p>The Note section is completed by the user as part of completing     the task before it is submitted.</p> </li> <li> <p>The photo section shows thumbnails of photos taken. The user takes     photos by clicking the          , which enters the camera mode for shooting (Camera Mode). Tap to     delete the currently displayed photo          .</p> </li> <li> <p>The Map button shows all photos of the task in the map view.</p> </li> <li> <p>Use the buttons Previous and Next to move between photo     previews.</p> </li> </ul> <p>A photo cannot be deleted if it has been already sent to the server, even if the task is in an editable state.</p> <p>Click the SEND button to send the message. After successful submission, the task can no longer be edited. If an error occurs during sending process, for example if the Internet connection was not strong enough at the time of sending, the task will be locked. In the locked state, the task is non-editable and the user can only retry its successful submission, or remove this locked state by starting the synchronization process.  </p> <p> </p> <p>Fig. 7 Task edit</p> <p>Clicking on the photo preview will open a window with its detail (Fig. 7). The basic attributes of the photo are displayed in the upper left corner. In this view, you can switch views between all photos of the task using the buttons  and  , or by swiping your finger on the photo to the right or left. The screen Detail supports displaying in portrait or in landscape mode. If possible, the photo can also be deleted from this view with the </p> <p> </p> <p>Fig. 8 Photo detail</p>"},{"location":"android/#standalone-snapshots","title":"Standalone Snapshots","text":"<p>Screen showing photos in the list (Fig. 8) taken separately outside the task. In each list item, on the left is a preview of the photo and on the right a list of basic metadata.</p> <p> </p> <p>Fig. 9 Overview of standalone photos</p> <p>From this screen, new photos are taken by touching of a button TAKE PHOTO, which enters the user to take camera mode (Camera Mode). Click the SEND button to send all newly taken unsent photos in the list. The MAP button shows all these photos in the map view.</p> <p>Clicking on a photo item in the list opens its detail (Fig. 9), where the editing is performed using the buttons at the bottom of the screen.</p> <p></p> <p>Fig. 10 Detail of a standalone photo</p> <ul> <li> <p>     opens a dialog for editing a note on a specific photo.</p> </li> <li> <p>     deletes the displayed photo.</p> </li> <li> <p>SEND button uploads the displayed photo to the server.</p> </li> </ul> <p>After sending, the photo becomes non-editable. If an error occurs during uploading, the photo will be set to locked mode. The same rules apply to this mode as for submitting a task.</p>"},{"location":"android/#camera-mode","title":"Camera Mode","text":"<p>A camera screen interface is used to take a single photo or a photo for a task (Fig. 10).</p> <p> </p> <p>Fig. 11 Camera mode screen</p> <p>The basic location data is displayed in the upper left corner:</p> <ul> <li> <p>Latitude indicates the latitude in degrees.</p> </li> <li> <p>Longitude indicates longitude in degrees.</p> </li> <li> <p>Altitude indicates the height above the reference surface of the     WGS 84 ellipsoid.</p> </li> <li> <p>Accuracy is an estimate of horizontal accuracy as the radius of     reliability.</p> </li> <li> <p>Image azimuth indicates the azimuth of the horizon the camera     captures.</p> </li> <li> <p>The angle expresses, in degrees, the tilt of the vertical axis of     the screen to project on the horizontal surface of the earth.</p> </li> </ul> <p>If shooting with position center of gravity calculation is enabled in the settings, a window with data on the currently calculated position center of gravity is also displayed:</p> <ul> <li> <p>Latitude indicates the latitude of the center of gravity in     degrees.</p> </li> <li> <p>Longitude indicates the longitude of the center of gravity in     degrees.</p> </li> <li> <p>Samples indicates the current number of processed samples to the     total number specified in the application settings.</p> </li> </ul> <p>If manual brightness correction is enabled in the settings, this  is available . Click this button to display a slider to adjust the darkening or lightening of the image, as needed. The setting of this correction is retained even after the application is closed. Clicking in the middle area of this bar resets the brightness lock. If the camera does not respond to a change in brightness and the image is too dark or too bright, the camera hardware is not compatible with this application. In this case, it may help to turn off manual correction in the application settings (Settings).</p> <p>The camera supports both portrait and landscape shooting.</p> <p>The photo is taken by tapping the camera  , or by pressing the hardware button on the device defined in the application settings (Settings). Then the auto shutter will release with a countdown of approximately 5 seconds. The following conditions must be met to take a photo:</p> <ul> <li> <p>The device must have a sufficiently good reception of location data.</p> </li> <li> <p>The user must not move and must stand still.</p> </li> </ul> <p>In addition, if center-of-gravity photography is permitted:</p> <ul> <li> <p>The center of gravity of the position must already be calculated or a predetermined number of samples must be collected for its calculation.</p> </li> </ul> <p>If any of these conditions are not met, a warning message will be displayed, shooting will not be enabled and the shooting button will not be available. If any of these conditions are violated during auto shutter release, the image will also be rejected.</p> <p>Click the button  to close the Camera mode and return to the previous screen.</p>"},{"location":"android/#map","title":"Map","text":"<p>The map is divided into two modes, one (photo mode) showing a group of photos of the logged in user (from sets of individual photos or photos within tasks), the other (path tracking mode) shows the currently recorded or already recorded paths.</p> <p> </p> <p>Fig. 12</p> <p>The map photos and tracked paths If location data is available, the current position will be marked on the map in the form of a blue dot</p> <p> , which can be navigated on the map by tapping the </p> <p>Button  /  switches the map view to a satellite or a map view.</p> <p> </p> <p>Fig. 13 Preview of the photo on the map</p> <p>If the map is in path tracking mode, the current position calculated from GNSS as the center of gravity of the positions is also displayed. This location is indicated by a red dot </p> <p>This position is always updated after the collection of all samples necessary for the calculation of the center of gravity, the number of which is defined in the application settings (Settings) by the parameter Number of samples for the center of gravity. Samples for calculating this position are taken from GGA sentences from NMEA messages from navigation satellites. Let these individual samples be denoted as  . The calculation is performed as follows:</p> <p>The centroid  of the set  consisting of all defined points  is computed as the average of the points</p> <p> where  is the innermost convex hull of set  .</p> <p>The innermost convex hull is computed based on following definition:</p> <p>Let the set  be a convex hull of the original set  .</p> <p>Then the recursive relation</p> <p> is convex hull of  </p> <p>can be defined ( ). Since finally many points in the set  are defined, there exists finally one  for  . Then  is the innermost convex hull of the set  .</p> <p>In the path tracking mode of the map, you can record a path in the map view. Click the RECORD button, the dialog opens for entering a path name, which is optional. When this dialog is confirmed, the path will be recorded. The user can switch the application screens at will when recording the path, but the application must remain active and in the forefront of Android processes. The path is recorded in the form of points, between which there is an approximate recording interval of 1 second. When recording, the path is simultaneously drawn on the map in the form of a black linearly angled curve. Each point on the curve is represented by a pin  . When you click on it, an overview of its geolocation data is displayed. Use the PAUSE / UNPAUSE button to pause a path recording. Click the STOP button and then confirm the dialog box to end the recording. The path is then drawn as a polygon, where the first and last points of the path are connected. You can send the path to the server by clicking on SEND button. Click the PATHS button to go to the list of already recorded paths (Paths), where you can select a path to draw it on the map. Fields id and name of the drawn path on the map (currently recorded or already recorded) are displayed in the overview next to the buttons for recording the route. Clicking in this report will move the map view to this path. In the application settings, you can turn on a sound tone when recording a path point and automatically pan the map view to the current location during recording.</p>"},{"location":"android/#paths","title":"Paths","text":"<p>This list shows all recorded routes (Fig. 14). Clicking on a specific road will draw it on the map (M). Each path already sent to the server is assigned its ID (identification number). If the route has not yet been sent, it can be deleted by clicking on the  . Click on the SEND button to send all paths which has not been sent yet.</p> <ul> <li> <p>The Area attribute is an     approximation of the area of a polygon formed by a path in square     meters.</p> </li> <li> <p>The By the center of gravity attribute determines whether waypoints were taken as the center of gravity of the positions.</p> </li> </ul> <p> </p> <p>Fig. 14 Recorded paths list</p>"},{"location":"android/#gnss-raw-data","title":"GNSS Raw Data","text":"<p>In this screen (Fig. 14) the user sees the current raw GNSS data received from the satellites with a basic overview of the device, the same as on the main screen (M). Most of the data is obtained from NMEA message records.</p> <ul> <li>Used satellites</li> <li>Number of satellites used</li> <li>Satellites visible</li> <li>Number of visible satellites sending the SNR.</li> <li>EGNOS</li> <li>Marked positive if the GPS Quality indicator value of the GGA sentence is equal to 2, marked negative if it is equal to 1, and marked as undecided in other cases.</li> <li>Geolocation information</li> <li>The Latitude, Elevation, Altitude, N / S, and E / W attributes are taken from the GSA sentences.</li> <li>The attributes HDOP, PDOP, VDOP, and Quality Assessment are taken from the GSA sentence.</li> <li>The Accuracy attribute is an estimate of horizontal accuracy as the radius of 68% reliability. It is obtained from the location service.</li> <li>The Accuracy in meters attribute is calculated above the center of gravity of the position. The calculation parameters are defined by the application settings.</li> <li>VTG info All attributes are read from the VTG sentence.</li> <li>RMC Info All attributes are read from the RMC sentence.</li> <li>SNR <ul> <li>Mean SNR of the last detected satellites.</li> </ul> </li> <li>List of satellites</li> <li>GALILEO SATs, GPS SATs, GLONASS SATs, BEIDOU SATs display satellites sending the SNR.</li> </ul> <p> </p> <p>Fig. 15 GNSS Raw Data</p>"},{"location":"android/#gnss-skymap","title":"GNSS SkyMap","text":"<p>This section let you compare the expected sky map of satellites calculated from your position to your actual measured sky map from the phone.</p> <p>A constellation drop-down menu let you choose a constellation to compare and the graph updates accordingly</p> <p>The points in red represent the calculated satellites position, the blue points the actual measured positions. Positions may overlap and result in a purple point representing the two values are one and the same and therefore correct.</p> <p> </p> <p>Fig. 16 GNSS SkyMap</p>"},{"location":"android/#about","title":"About","text":"<p>This screen contains basic information about the application (Fig. 16).</p> <p> </p> <p>Fig. 17 About screen</p>"},{"location":"android/#settings","title":"Settings","text":"<p>The screen provides the main settings of the entire application (Fig. 17).</p> <p> </p> <p>Fig. 18 Settings Screen</p> <ul> <li> <p>GNSS Location Settings</p> </li> <li> <p>Customization of the location algorithm and constellation, assisted correction and centroid calculation (Fig.18)</p> </li> <li> <p>External Bluetooth GPS</p> </li> <li> <p>Use an external bluetooth GPS device as location source. (Fig. 19)</p> </li> <li> <p>Tracking centroid samples</p> </li> <li> <p>Sets the number of samples required to calculate the position centroid.</p> </li> <li> <p>Click the Default button to set the default number.</p> </li> <li> <p>Button to take a photo</p> </li> <li> <p>Defines a hardware button for taking a photo in camera mode (C).</p> </li> <li> <p>If activated, the dialog for setting the hardware button on the device is displayed. The setting is made by pressing the desired button when this dialog is displayed.</p> </li> <li> <p>Not all buttons on the device are suitable or usable. E.g. suitable buttons are for volume control. E.g. the screen lock button cannot be used.</p> </li> <li> <p>Manual brightness correction</p> </li> <li> <p>Activates the manual brightness correction option in camera mode (C).</p> </li> <li> <p>Automatically pan the map during a path recording</p> </li> <li> <p>Automatically focus the map view to your current location while recording a path (M).</p> </li> <li> <p>Beep when recording a path point</p> </li> <li> <p>Emits a tone each time a point is recorded while recording a path (M).</p> </li> </ul>"},{"location":"android/#external-bluetooth-gps-gnss","title":"External Bluetooth GPS / GNSS","text":"<p>This section allows to scan for an external GPS Device and pair it to your application to use it as the source of the location.</p> <p>The button SCAN DEVICES allow you to start scanning for devices, a list of devices detected will appear. After choosing a device, you can press TEST CONNECTION to test if the device is connected AND compatible with the application.This setting is saved and the device data will be used for all location instances in the application (map, tracking and photo).</p> <p></p> <p>Fig. 19 External Bluetooth GPS</p>"},{"location":"android/#offline-usage","title":"Offline Usage","text":"<p>The user can snap pictures even when there is no internet connection available, and then send the pictures when it is. Pictures will be stored in a protected storage space of the app for later usage.</p> <p>In case of OSNMA validated picture, the verification process of the picture will happen when the user sends their pictures to the server, based on the data gathered during the shot.</p>"},{"location":"android/#source-code-overview","title":"Source Code Overview","text":""},{"location":"android/#general-overview","title":"General Overview","text":"<p>The application is developed as a regular application for the Android OS in the Java language compiled in the Android Studio system with Gradle build automation tool. The source code is structured according to the Android project standard described at https://developer.android.com/studio/projects</p> <p>The application consists of three parts, from the kernel of the application itself and the two libraries gnss_scan and convex_hull, which are distributed in AAR format, where the gnss_scan library is dependent on the convex_hull library. These libraries are separated from the functionality of the application kernel to allow their independent use in other projects.</p> <p>All three parts of the code will be described by summarizing the description of their purpose, their classes, and their main configuration files. \u2003</p>"},{"location":"android/#application-kernel","title":"Application Kernel","text":"<p>The kernel of the application handles all essential tasks related to communication with the server, UI management, access to the phone hardware and other necessary processes required for running in the Android OS.  The primary purposes of this section are:</p> <ul> <li>Login / logout of user</li> <li>Application permission checks</li> <li>Hardware management (camera, gyroscope, compass, location sensors, \u2026)</li> <li>Taking and modifying photos</li> <li>Geotagging photos</li> <li>Sending and receiving photos with defined tasks from CAP (synchronization)</li> <li>Viewing captured photos and tasks in the UI</li> <li>Showing captured photos on a map</li> <li>Record paths</li> <li>Showing recorded paths on a map</li> <li>Synchronising recorded paths with server</li> <li>Display of parcel polygons on the map, defined by LPIS</li> <li>Displaying of currently received GNSS data</li> <li>Application settings</li> <li>Automatic language and locale settings by device</li> </ul> <p>The base code consists of java classes in the main package eu.foxcom.gtphotos. All services and activities are defined in this root package. All activities inherit the base class BaseActivity. All fragments inherit the base class BaseFragment. These basic classes provides common functionalities, which are used in derived activity classes. The BaseActivity also serves as an access point for communicating and controlling the MainService shared between all activities. There are other packages and classes in the model package that implement functions, processes, and data, and are used in individual activities.</p> <p>What follows is a list and a description of each class from the root package:</p> <ul> <li>AboutActivity<ul> <li>The activity for displaying the summary of the application with BasicInfoFragment.</li> <li>The layout is defined in the activity_about.xml.</li> </ul> </li> <li>BaseActivity<ul> <li>The abstract class providing common processes to other activities</li> <li>Checks all necessary permissions to run the application.</li> <li>Controls the user access to the application during synchronization.</li> <li>Management and communication with the MainService.</li> <li>Common broadcast messages management.</li> <li>Main menu operation.</li> </ul> </li> <li>BaseFragment<ul> <li>The abstract class providing common processes to other fragments.</li> <li>Life status cycle monitoring.</li> </ul> </li> <li>BasicInfoFragment<ul> <li>The fragment showing the hardware attributes of the phone, the ability to receive certain GNSS messages, and the current availability of the location service. Some of this data is displayed in the form of a traffic light.</li> <li>Needs to have mediated access to the gnss_scan library functions from its host activity.</li> <li>The layout is defined in fragment_basic_info.xml.</li> </ul> </li> <li>CameraActivity<ul> <li>The activity that controls all processes while working with the phone's camera and taking photos.</li> <li>The layout is defined in activity_camera.xml</li> </ul> </li> <li>CameraExposureCorrector<ul> <li>The helper class used by CameraActivity to manually change brightness.</li> <li>Helps eliminate some brightness issues on certain types of phones.</li> </ul> </li> <li>CameraViewModel<ul> <li>The ViewModel that allows CameraActivity to keep the current location data and model/PhotoDataController instance out of the normal activity lifecycle.</li> </ul> </li> <li>GnssRawActivity<ul> <li>The activity for displaying captured GNSS data.</li> <li>Displays BasicInfoFragment.</li> <li>Makes high use of the gnss_scan library.</li> <li>The layout is defined in the activity_gnss_raw.xml</li> </ul> </li> <li>Launcher<ul> <li>Makes following settings that are useful when the application is first loaded into memory:<ul> <li>Initializes ResourceZoneInfoProvider and registers an instance of TimeZoneChangedReceiver to receive android.intent.action.TIMEZONE_CHANGED broadcasts from Joda Time library.</li> </ul> </li> </ul> </li> <li>LoginActivity<ul> <li>The activity to handle user logins.</li> <li>The layout is defined in activity_login.xml</li> </ul> </li> <li>MainActivity<ul> <li>The root activity displaying information about the logged user.</li> <li>Displays BasicInfoFragment.</li> <li>Serves as the main user signpost in the application.</li> </ul> </li> <li>MainService<ul> <li>The service shared across all activities during the application lifecycle.</li> <li>Provides the main OS notification channel of the application.</li> <li>Implements communication with activities via a broadcast channel.</li> <li>Provides activities with unified access to the local database.</li> <li>Implements the synchronization process between server and application data.</li> </ul> </li> <li>MapActivity<ul> <li>The activity for displaying data on the map.</li> <li>Displays photos at their captured location.</li> <li>Displays land polygons provided by CAP.</li> <li>Displays recorded paths and controls path recording process using helper classes in model/pathTrack</li> <li>The layout is defined in the activity_map.xml.</li> </ul> </li> <li>PathTrackingOverviewActivity<ul> <li>The activity for displaying the recorded path in a list structure and managing them.</li> <li>The layout is defined in the activity_path_tracking_overview.xml.</li> </ul> </li> <li>PermissionActivity<ul> <li>The activity used to prevent the use of the application without sufficient permissions from the OS.</li> <li>The layout is defined in activity_permission.xml.</li> </ul> </li> <li>PhotoDetailActivity<ul> <li>The activity to view a detail of an unowned photo and to manage this photo.</li> <li>The layout is defined in activity_photo_detail.xml</li> </ul> </li> <li>ServiceController, ServiceGetter, ServiceInit<ul> <li>The general classes and interface that facilitate the management of services in activities.</li> </ul> </li> <li>SettingActivity, SettingsFilterActivity<ul> <li>The activities allowing access to the settings of the application.</li> <li>The layout is defined in activity_settings.xml and activity_settings_filter.xml.</li> </ul> </li> <li>StartActivity<ul> <li>The activity that serves as an initial router among other activities.</li> <li>The layout is defined in activity_start.xml</li> </ul> </li> <li>TaskFulfillActivity<ul> <li>The activity to view detail of a task and to manage this task.</li> <li>The layout is defined in activity_task_fulfill.xml</li> </ul> </li> <li>TaskOverviewActivity<ul> <li>The activity for displaying the task list.</li> <li>The layout is defined in activity_task_overview.xml</li> </ul> </li> <li>UnownedPhotoOverviewActivity<ul> <li>The activity for displaying a list of unowned photos and managing them.</li> <li>The layout is defined in activity_unowned_photo_overview.xml.</li> </ul> </li> <li>model/component/\u2026<ul> <li>The classes representing the following custom graphic elements used in the application:<ul> <li>DynamicListView</li> <li>SeekBarAPI26</li> <li>VerticalSeekBarAPI26</li> </ul> </li> </ul> </li> <li>model/functionInterface/\u2026<ul> <li>The interfaces simulating the following interfaces used in standard Java 8 libraries:<ul> <li>BiConsumer</li> <li>Consumer</li> <li>Function</li> <li>Supplier</li> </ul> </li> </ul> </li> <li>model/gnss/NMEAParserApp<ul> <li>The class extending NMEAParser from the gnss_scan library for the specific needs of the application kernel.</li> </ul> </li> <li>model/groundGeometry/\u2026<ul> <li>The classes for managing the display of parcel polygons on the map in the MapActivity class.</li> </ul> </li> <li>model/pathTrack/\u2026<ul> <li>The classes to record and to draw paths on the map used in the MapActivity class. </li> </ul> </li> <li>model/AppDatabase<ul> <li>The class for defining the local database configuration and its incremental changes.</li> </ul> </li> <li>model/CameraController<ul> <li>The helper class for obtaining static hardware information about phone's camera.</li> </ul> </li> <li>model/Converters<ul> <li>The class that defines rules for converting data types between a local database and application runtime memory.</li> </ul> </li> <li>model/Digest<ul> <li>The class used to create the file signature of the captured photo.</li> </ul> </li> <li>model/ExifUtil<ul> <li>The class that provides functions for reading or writing data in EXIF format.</li> </ul> </li> <li>model/LoggedUser, model/LoggedUserDao<ul> <li>The database classes for manipulation and operations with a user data entity.</li> </ul> </li> <li>model/PersistData<ul> <li>The class that serves as a unified gateway for writing and reading data stored in sharedPreferences memory.</li> </ul> </li> <li>model/Photo, model/PhotoDao<ul> <li>The database classes for manipulation and operations with a photo data entity.</li> </ul> </li> <li>model/PhotoDataController<ul> <li>The class to control the acquisition of current geolocation data along with the orientation of the telephone in space.</li> </ul> </li> <li>model/PhotoList <ul> <li>The class representing a data collection of classes Photo and PhotoDao and implementing the necessary operations on that collection.</li> </ul> </li> <li>model/PositionSensorController<ul> <li>The class that implements operations on the gyroscope and compass sensors and calculates the phone\u2019s orientation in space over raw data from these sensors.</li> </ul> </li> <li>model/Requestor<ul> <li>The class for sending and receiving http data between a server and an application in a unified format and authentication.</li> </ul> </li> <li>model/SyncQueue<ul> <li>The general class to support synchronization of asynchronous processes</li> <li>Mainly used in the process of synchronization between server and application data.</li> </ul> </li> <li>model/Task, model/TaskDao<ul> <li>The database classes for manipulation and operations with a task data entity.</li> </ul> </li> <li>model/TaskList<ul> <li>The class representing a data collection of classes Task and TaskDao and implementing the necessary operations on that collection.</li> </ul> </li> <li>model/UpdateReceiver<ul> <li>The abstract class that provides a basic interface to nested classes of other classes to register callbacks over a specific instance of the SyncQueue class.</li> </ul> </li> </ul> <p>The AndroidManifest.xml file contains the hierarchy between activities, their default configurations, explicitly required permissions as well as explicitly required device properties and other application configurations.</p> <p>All UI layouts are defined in \u2026/res/layout folder.</p> <p>All supported application languages are in string.xml files:</p> <ul> <li>values/string.xml (English)</li> <li>values-cs/string.xml (Czech)</li> </ul> <p>Dependencies on other external libraries can be read from gradle configuration files.</p> <p>All source files are located and structured in accordance with the required public standards for Android projects https://developer.android.com/studio/projects . \u2003</p>"},{"location":"android/#gnss_scan-library","title":"Gnss_scan Library","text":"<p>This library provides the ability to receive and process GNSS data and mobile network data in real time in a convenient way by registering callbacks to scanners of the mobile network and data from location satellites. This library is dependent on convex_hull library. The primary purposes of this library are:</p> <ul> <li>receive GNSS data and enable their further processing</li> <li>receive mobile network data and enable their further processing</li> </ul> <p>The following is a list and a description of each class from the root package eu.foxcom.gnss_scan:</p> <ul> <li>CentroidFilter<ul> <li>The interface allowing custom definition of filter rules when calculating the convex hull centroid over GGA messages.</li> </ul> </li> <li>CentroidFinisher<ul> <li>The interface allowing custom definition of a rule for ending the data stream and starting the calculation of the convex hull centroid over this data.</li> </ul> </li> <li>Scanner<ul> <li>The base class for all scanner class.</li> <li>Implements the processes of registration and notifying of Receiver classes and ensures thread security during their asynchronous processing.</li> <li>Not intended for public use.</li> </ul> </li> <li>Receiver<ul> <li>The base class for all receiver classes.</li> <li>The implementations of public derived classes are defined as nested classes in specific implementations of individual scanner classes.</li> <li>The custom processes over the currently received data are created by extending public implementations of this class.</li> <li>Not intended for public use.</li> </ul> </li> <li>Holder<ul> <li>The base class for all receiver classes.</li> <li>The implementations of public derived classes are defined as nested classes in specific implementations of individual scanner classes.</li> <li>It serves as a data carrier when transmitting data between the scan and the receiver.</li> <li>Not intended for public use.</li> </ul> </li> <li>GnssStatusScanner<ul> <li>The scanner class implementing processes and classes for scanning data from location service.</li> </ul> </li> <li>NetworkInfoScanner<ul> <li>The scanner class implementing processes and classes for scanning mobile network data.</li> </ul> </li> <li>NMEAScanner<ul> <li>The scanner class implementing processes and classes for scanning raw NMEA messages.</li> </ul> </li> <li>NMEAParser<ul> <li>The derived class from NMEAScanner.NMEAReceiver class.</li> <li>Used to process a raw text NMEA message into data objects based on the NMEA sentence types.</li> <li>Provides classes for the ability to define custom processes based on NMEA sentence types.</li> <li>Provides the ability to calculate convex hull centroid location above this data. The AndroidManifest.xml file contains explicitly required permissions. Dependencies on other external libraries can be read from the gradle configuration files.</li> </ul> </li> </ul> <p>All source files are located and structured in accordance with the required public standards for Android AAR library https://developer.android.com/studio/projects/android-library#aar-contents. \u2003</p>"},{"location":"android/#convex_hull-library","title":"Convex_hull Library","text":"<p>This library provides the ability to calculate the convex hull centroid based on the provided data in the format of a two-dimensional Cartesian coordinate system. This library can be used for any type of data that represent position in this coordinate system.</p> <p>The primary purposes of this library are:</p> <ul> <li>To calculate a convex hull centroid of the provided data The following is a list and a description of each class from the root package eu.foxcom.convex_hull:</li> <li>Cluster<ul> <li>The class represents a collection of all points.</li> <li>Calculates the convex hull centroid.</li> </ul> </li> <li>Point<ul> <li>The class representing a single point data object.</li> </ul> </li> <li>QuickHull<ul> <li>The helper class for computing convex hull centroid according to the quickhull algorithm.</li> <li>Not intended for public use.</li> </ul> </li> </ul> <p>Dependencies on other external libraries can be read from gradle configuration files. All source files are located and structured in accordance with the required public standards for Android AAR library https://developer.android.com/studio/projects/android-library#aar-contents.</p>"},{"location":"building-attributes/","title":"Building attributes","text":""},{"location":"building-attributes/#introduction","title":"Introduction","text":"<p>Identify building height from a photo Building-Height is a system that can determine the attributes of historical buildings in England.  The building part can be defined just by uploading a photo.</p> <p>Working with geo datasets and image metadata to visualize 3d buildings showing building attributes, such as heights, volumes.</p> <ul> <li>building layer polygon extrusion depicts the 3D building</li> <li>creates 2 geojson layers (using deck.gl)</li> <li>building height attribute from ordnance survey</li> <li>polygon of building footprints from ordnance survey</li> <li>lidar data from environment agency for 3d terrain</li> <li>creates a 3D building on a map canvas (using mapbox-gl) after taking a geojson file as input.</li> </ul> <p>The goal is to create a terrain map of southeast England using point cloud datasets (appendix a) where building polygons will be extruded on a map with real world coordinates.</p>"},{"location":"building-attributes/#point-cloud","title":"Point Cloud","text":""},{"location":"building-attributes/#upload-an-image","title":"Upload an image","text":"<p>You can upload or capture from your camera with active GPS</p>"},{"location":"building-attributes/#image-metadata-will-be-displayed","title":"Image metadata will be displayed","text":"<p>Extracted metadata from the image you uploaded will be displayed</p>"},{"location":"building-attributes/#building-height-will-be-identified","title":"Building height will be identified","text":"<p>The building height, map location of the building and its attributes will be displayed</p>"},{"location":"building-attributes/#3d-navigation","title":"3D Navigation","text":"<ul> <li>Pan   Mouse Left</li> <li>Rotate    Mouse Right</li> <li>Shift + Mouse Left</li> <li>Top-down Camera   T</li> <li>Perspective Camera    P</li> <li>Driver Camera D</li> <li>Recenter Camera   R</li> </ul>"},{"location":"building-attributes/#showcase","title":"Showcase","text":"<p>Create a link to a showcase which contains exif data extracted from photos collected in mappics galleries via api.</p> <ul> <li>New button Showcase</li> <li>Function fetch all exif data via api from images for a particular gallery (first one heritage-trail-Farnham) this will be a stream as shown in streetscape.gl</li> <li>Fetch all polygons via api (already works)</li> <li>Exclude all buildings (already works for 1no. building)</li> </ul> <pre><code>curl -X 'GET' \\\n  'https://api.buildingshistory.co.uk/api/v1/images/?gallery_id=985e3f6d-09f1-4a0f-8cbf-060514ecb860' \\\n  -H 'accept: application/json' \\\n  -H 'X-CSRF-TOKEN:\n</code></pre>"},{"location":"building-attributes/#gallery","title":"Gallery","text":"<p>buildingshistory gallery (current)</p>"},{"location":"building-attributes/#todo","title":"TODO","text":"<p>(out of date)https://api.buildingshistory.co.uk/api/v1/galleries/?slug%3Dheritage-trail-farnhamgallery_id%20985e3f6d-09f1-4a0f-8cbf-060514ecb860</p> <p></p> <p>https://buildingshistory.co.uk/galleries/new-homes/</p>"},{"location":"building-attributes/#creating-a-terrain-map","title":"Creating a terrain map","text":"<p>Go Enviroment Agency website, which contains Lidar data for the United Kingdom.</p> <p>Search for the area in which you would like to create the terrain map, below show a results for Farnham in Surrey</p> <p></p> <p>Available tiles used in this project</p> <ul> <li>lidar_composite_dtm-2022-1-SU84nw</li> <li>lidar_composite_dtm-2022-1-SU84ne</li> </ul> <p>The surface (basemap) terrain would be covered by ordnance survey tiles, field of view (FOV) would be from street view showing camera and building with real coordinates. </p> <p></p> <p>(figure1)</p> <p>Buildingshistory.co.uk shows concept but not using real world coordinates, has a terrain and basemap. </p> <p></p> <p>(figure2).</p>"},{"location":"building-attributes/#create-a-rgb-mbtile-png","title":"create a rgb Mbtile (PNG)","text":"<p>for our tileserver of SU84NW to either geoserver to tilesserver-g with Arcgis </p> <p> (figure 3) </p>"},{"location":"building-attributes/#deck-gl","title":"Deck-GL","text":""},{"location":"building-attributes/#cameragpsdata","title":"cameraGPSData","text":"<p>(GPSImgDirection) to position initialViewState  -20m behind, show if a person was taking photo of building <pre><code>    const exif3dCameraLayer = new ScenegraphLayer({\n      id: \"exif3d-camera-layer\",\n      data: cameraGPSData,\n      scenegraph: url,\n      getPosition: (d) =&gt; d.coordinates,\n      getColor: (d) =&gt; [203, 24, 226],\n      getOrientation: (d) =&gt; [0, -d.bearing, 90],\n      opacity: 1,\n    });\n</code></pre></p>"},{"location":"building-attributes/#hover-over","title":"hover over","text":"<p>pink camera shows image hoverover from building-height.co.uk </p>"},{"location":"building-attributes/#draw-lidar","title":"draw lidar","text":"<p>(figure 1)</p>"},{"location":"building-attributes/#api-database","title":"API/ Database","text":"<ul> <li>geojson for map of 1 building</li> <li>building height and toid <pre><code>            \"properties\": {\n                \"RelHMax\": 13.1,\n                \"TOID\": \"osgb1000014525478\",\n                \"_symbol\": 4\n</code></pre> 3.  Would like to add post this geojson into su_building table  </li> </ul>"},{"location":"building-attributes/#geoserver","title":"Geoserver","text":""},{"location":"building-attributes/#cache-os-tiles","title":"cache OS tiles","text":"<p>What to use cached tiles from geoserver Replace https://api.os.uk/maps/raster/v1/zxy/Outdoor_3857/{z}/{x}/{y}.png?key=wXtior9ubP6EFLYP5l6isfWZYiKqOlf7</p> <p>Can you configure geoserver to work {z}/{x}/{y}.png, started to set it up on geoserver this morning. Followed https://blog.ianturton.com/2021/07/22/Cascading-OS-Map-Tiles.html </p>"},{"location":"building-attributes/#references","title":"References","text":""},{"location":"building-attributes/#terrain","title":"Terrain","text":"<ul> <li>https://deck.gl/docs/api-reference/geo-layers/terrain-layer</li> <li>https://github.com/tilezen/joerd/blob/master/docs/formats.md#terrarium terrarium with extension png in Web Mercator projection, 256x256, 260x260, 512x512, and 516x516 tiles</li> <li>https://environment.maps.arcgis.com/home/user.html?user=ea.geomatics.admin</li> </ul>"},{"location":"building-attributes/#deck-gl_1","title":"Deck-GL","text":"<ul> <li>OrbitController</li> <li><ul>https://github.com/aurora-opensource/streetscape.gl </ul>"},{"location":"building-attributes/#technology-stack","title":"Technology Stack","text":"<ul> <li>React-mapgl</li> <li>Exif-extractor</li> <li>Mapboxgl</li> <li>Deckgl<ul> <li>PolygonLayer (buildings)</li> <li>IconLayer (camera)</li> <li>GeoJsonLayer</li> <li>ScenegraphLayer</li> <li>OrbitController</li> </ul> </li> </ul>"},{"location":"ios/","title":"Mobile Application - iOS","text":""},{"location":"ios/#installation","title":"Installation","text":"<p>Installation from App Store or via TestFlight</p> <p>The application is currently available only via TestFlight.Registration as a tester is needed.</p>"},{"location":"ios/#compiling-from-source-code","title":"Compiling from source code","text":"<p>The source code and the directory structure are compatible and meet the requirements for the xcode in which it was created.</p>"},{"location":"ios/#minimum-requirements","title":"Minimum requirements","text":"<ul> <li>iOS 13 compatible iPhone or iPad or     newer (iPhone 6S/SE or newer)</li> </ul>"},{"location":"ios/#user-guide","title":"User Guide","text":""},{"location":"ios/#application-start-and-permissions","title":"Application Start and Permissions","text":"<p>The application can be run by selecting it in the list of applications.</p> <ul> <li>Make sure to grant permissions to     access the device\u2019s location and take     pictures:</li> </ul> <ul> <li>Access device\u2019s     location</li> </ul> <ul> <li> <p>Allow to add location data to token     photos</p> </li> <li> <p>Receiving different types of     location data</p> </li> <li> <p>Recording     paths</p> </li> </ul> <ul> <li>Take pictures and record     video</li> </ul> <ul> <li>Allow to take photos by     camera.</li> </ul> <p>To log in to the application, connection to the internet is required. After the first login, the user will be remembered. A new login will only be required after explicit logout.</p>"},{"location":"ios/#login","title":"Login","text":"<p>After the first launch of the application and granting all the necessary permissions to the application, the user will be presented with a login screen (Fig. 19), where the assigned login and password will need to be filled out. Click the Sign In button to complete the login.</p> <p>To successfully log in, all data most be entered correctly and the device should be connected to the Internet at the time of login. The login details will be remembered for future uses of the app. Re-login will be required only after explicit logout of the user.</p> <p></p> <p>Fig. 20 Login screen</p> <p>Through the \"Select Server\" button, it will be possible to set the URL of a custom server that will be used instead of the app's default server. Once you have logged in, in order to return to the default server, you will need to perform a logout and deselect the custom server.</p> <p></p> <p>Fig. 21 Select Server</p>"},{"location":"ios/#main-screen","title":"Main Screen","text":"<p>The attributes of the host device are displayed in the \u201cBasic Info\u201d section. Traffic lights are displayed next to some of the attributes. Their detailed description is given below.</p> <ul> <li>Location service check     </li> </ul> <ul> <li> <p>The green color indicates the active     ability of the phone to determine its current     location.</p> </li> <li> <p>Red means an inability to determine     your current position. If this is the case, location services on the     device may be disabled. </p> </li> </ul> <p>Other attributes use the green or yellow color.</p> <p>Green indicates that the device has that particular property. Yellow indicates that the device does not have the given property or has not yet been able to verify the given availability and may change to green over time.</p> <ul> <li>Galileo     capability</li> </ul> <ul> <li>Checks if the device is capable to     read Galileo signals </li> </ul> <p> </p> <p>Fig. 22  Main screen</p> <p>The application modules can be accessed through by pressing buttons which are situated in the bottom of the screen. The following options are available:</p> <ul> <li>Photos</li> </ul> <ul> <li>Open screen with list of unowned     photos.</li> </ul> <ul> <li>Tasks</li> </ul> <ul> <li>Open screen with task     list.</li> </ul> <ul> <li>Map</li> </ul> <ul> <li>Open screen with map including all     captured photos, recording new paths or viewing already recorded     paths.</li> </ul> <ul> <li>Settings</li> </ul> <ul> <li>Open screen with     settings.</li> </ul> <ul> <li>About</li> </ul> <ul> <li>Open screen with basic information     about application</li> </ul>"},{"location":"ios/#task-list","title":"Task List","text":"<p>In the task overview (Fig. 21), user tasks are listed by name, status, number of captured images, creation date and due date. By clicking on a specific task, a screen with details and options to edit is displayed.</p> <p> </p> <p>Fig. 23 Task list</p> <p>Tasks can be set in following states, which also determine their editability:</p> <p>Description</p> <p>Editable</p> <p> </p> <p>New A new task</p> <p>YES</p> <p> </p> <p>Open</p> <p>A new task, which has been already displayed by the user. The user is aware of the task.</p> <p>YES</p> <p> </p> <p>Returned The has been returned by the officer to the user with an additional information request.</p> <p>YES</p> <p> </p> <p>Data provided</p> <p>The task which was completed and sent by the user to the PA</p> <p>NO</p>"},{"location":"ios/#task-detail","title":"Task detail","text":"<p>The task detail (Fig. 22) shows the data attributes of the task, including all captured images. Depending on the status of the task, the task can either be edited or viewed.</p> <ul> <li> <p>The upper section lists the basic     data attributes of the task. </p> </li> <li> <p>The     Instructions section shows the description     needed to complete the task given by an authorized staff member of     the Paying Agency. </p> </li> <li> <p>The     Reason for     return section describes the reason for     the Paying Agency why the task was returned for a new performance.     </p> </li> <li> <p>The     Note section is completed by the user as     part of completing the task before it is submitted.     </p> </li> <li> <p>The photo section shows thumbnails     of photos taken. The user takes photos by clicking the       , which enters the camera mode for     shooting (Camera Mode). Tap to delete the currently displayed       . </p> </li> <li> <p>Use the buttons     Previous and     Next to move between photo     previews.</p> </li> </ul> <p>A photo cannot be deleted if it has been already sent to the server, even if the task is in an editable state.</p> <p>Click the SEND button to send the message. After successful submission, the task can no longer be edited.</p> <p> </p> <p>Fig. 24 Task edit</p> <p>Clicking on the photo preview will open a window with its detail (Fig. 23). The basic attributes of the photo are displayed in the upper left corner. In this view, you can switch views between all photos of the task using the buttons  and  .</p> <p> </p> <p>Fig. 25  Photo detail</p>"},{"location":"ios/#standalone-snapshots","title":"Standalone Snapshots","text":"<p>Screen showing photos in the list (Fig. 24) taken separately outside the task. In each list item, on the left is a preview of the photo and on the right a list of basic metadata.</p> <p> </p> <p>Fig. 26 Overview of standalone photos</p> <p>From this screen, new photos are taken by touching of a button NEW, which enters the user to take camera mode (Camera Mode).</p> <p>Clicking on a photo item in the list opens its detail (Fig. 25). Click the SEND button to send the photo to server.</p> <p> </p> <p>Fig. 27 Detail of a standalone photo</p> <p>It\u2019s possible to export a PDF file with the relevant data of the picture with the \u201cPDF\u201d button on the bottom.</p>"},{"location":"ios/#camera-mode","title":"Camera Mode","text":"<p>A camera screen interface is used to take a single photo or a photo for a task (Fig. 26).</p> <p> </p> <p>Fig. 28 Camera mode screen</p> <p>The basic location data is displayed in the upper left corner:</p> <ul> <li> <p>Latitude indicates the latitude in     degrees.</p> </li> <li> <p>Longitude indicates longitude in     degrees.</p> </li> <li> <p>Altitude indicates the height above the     reference surface of the WGS 84 ellipsoid.     </p> </li> <li> <p>Accuracy is an estimate of horizontal     accuracy as the radius of reliability. </p> </li> <li> <p>Image     azimuth indicates the azimuth of the     horizon the camera captures. </p> </li> <li> <p>The     angle expresses, in degrees, the tilt of     the vertical axis of the screen to project on the horizontal surface     of the earth. </p> </li> </ul> <p>If shooting with position center of gravity calculation is enabled in the settings, a window with data on the currently calculated position center of gravity is also displayed:</p> <ul> <li> <p>Latitude indicates the latitude of the     center of gravity in degrees. </p> </li> <li> <p>Longitude indicates the longitude of the     center of gravity in degrees. </p> </li> <li> <p>Samples indicates the current number of     processed samples to the total number specified in the application     settings. </p> </li> </ul> <p>The camera supports both portrait and landscape shooting.</p> <p>The photo is taken by tapping the camera  . Then the auto shutter will release with a countdown of approximately 5 seconds. The following conditions must be met to take a photo:</p> <ul> <li> <p>The device must have a sufficiently     good reception of location data. </p> </li> <li> <p>The user must not move and must     stand still. </p> </li> </ul> <p>In addition, if center-of-gravity photography is permitted:</p> <ul> <li>The center of gravity of the     position must already be calculated or a predetermined number of     samples must be collected for its calculation.     </li> </ul> <p>If any of these conditions are not met, a warning message will be displayed, shooting will not be enabled and the shooting button will not be available. If any of these conditions are violated during auto shutter release, the image will also be rejected.</p> <p>Click the button  to close the Camera mode and return to the previous screen.</p>"},{"location":"ios/#map","title":"Map","text":"<p>The map is showing a group of photos of the logged in user (from sets of individual photos or photos within tasks and the currently recorded or already recorded paths</p> <p> </p> <p>Fig. 29 The map photos and tracked paths</p> <p>If location data is available, the current position will be marked on the map in the form of a blue dot </p> <p> . Button  switches the map view to a satellite or a map view.</p> <p>There is a black dot in the photo mode of the map at the location where the image was taken, with a small icon above it. The green circle determines the azimuth direction of the mobile device's screen at the time the photo was taken. Press the image icon to display an overview of the basic attributes of the image. You can record a path in the map view. Click the RECORD button, the dialog opens for entering a path name, which is optional. When this dialog is confirmed, the path will be recorded. The user can switch the application screens at will when recording the path, but the application must remain active. The path is recorded in the form of points, between which there is an approximate recording interval of 1 second. When recording, the path is simultaneously drawn on the map in the form of a black linearly angled curve. Each point on the curve is represented by a pin  . When you click on it, an overview of its geolocation data is displayed. Click the STOP button to end the recording. The path is then drawn as a polygon, where the first and last points of the path are connected. Click the PATHS button to go to the list of already recorded paths (Paths), where you can select a path to draw it on the map. Fields id and name of the drawn path on the map (currently recorded or already recorded) are displayed in the overview next to the buttons for recording the route. Clicking in this report will move the map view to this path. In the application settings, you can turn on a sound tone when recording a path point and automatically pan the map view to the current location during recording.</p>"},{"location":"ios/#paths","title":"Paths","text":"<p>This list shows all recorded routes (Fig. 28). Clicking on a specific road will draw it on the map (M). Click on the SEND button to send all paths which has not been sent yet.</p> <ul> <li>The     Area attribute is an approximation of     the area of a polygon formed by a path in square meters.     </li> </ul> <p> </p> <p>Fig. 30 Recorded paths list</p> <p>Every path can be exported to a KML file on the phone with the respective \u201cKML\u201d button.</p>"},{"location":"ios/#gnss-skymap","title":"GNSS SkyMap","text":"<p>This section let you view the expected sky map of satellites.</p> <p>A constellation drop-down menu let you choose a constellation to view and the graph updates accordingly.</p> <p>The points in blue represent the calculated satellites position.</p> <p> </p> <p>Fig. 31 GNSS SkyMap</p> <p> </p>"},{"location":"ios/#about","title":"About","text":"<p>This screen contains basic information about the application (Fig. 30).</p> <p> </p> <p>Fig. 32 About screen</p>"},{"location":"ios/#settings","title":"Settings","text":"<p>The screen provides the main settings of the entire application (Fig. 31).</p> <p> </p> <p>Fig. 33 Settings Screen</p> <ul> <li>Photo with centroid location     computation </li> </ul> <ul> <li>When capturing an image, location     center of gravity information will be added to its metadata.     </li> </ul> <ul> <li>Centroid Sampling     Number</li> </ul> <ul> <li> <p>Sets the number of samples required     to calculate the position center of gravity.     </p> </li> <li> <p>Click the Default button to set the     default number. </p> </li> </ul> <p>Clicking the SET DEFAULT VALUES button returns all filter values to the default.</p>"},{"location":"ios/#external-bluetooth-gps-gnss","title":"External Bluetooth GPS / GNSS","text":"<p>This section allows to scan for an external GPS Device and pair it to your application to use it as the source of the location.</p> <p>The button SCAN DEVICES allow you to start scanning for devices, a list of devices detected will appear. After choosing a device, you can press TEST CONNECTION to test if the device is connected AND compatible with the application.This setting is saved and the device data will be used for all location instances in the application (map, tracking and photo).</p> <p></p> <p>Fig. 19 External Bluetooth GPS</p>"},{"location":"ios/#offline-usage","title":"Offline Usage","text":"<p>Once you have logged in, it is possible to operate in offline mode. Some services, such as Skyview and maps, will not be available, but you will still be able to record paths or take geolocated photos, and the data can be sent once the device is back online.</p>"},{"location":"ios/#source-code-overview","title":"Source Code Overview","text":""},{"location":"ios/#general-overview","title":"General Overview","text":"<p>The application is developed as a regular application for the iPhone Operating System (iOS) in the Swift language build inside XCode IDE. The UI of application is built using the Storyboard. The application is written for minimal compatibility with iOS 13. The source code is structured according to the XCode project standard descripted at https://developer.apple.com/library/archive/featuredarticles/XcodeConcepts/Concept-Projects.html</p> <p>The source code aims to follow this group structure:</p> <ul> <li>Each screen of the application has its own controller. </li> <li>All controllers are located in separate files in the root group. </li> <li>All background processes, some foreground processes and all application data models are located in the Model group.</li> </ul> <p>The files of the source code can be divided based on these parts of the application:</p> <ul> <li>system structure,</li> <li>global structure,</li> <li>taking photos,</li> <li>task management,</li> <li>application settings,</li> <li>about screen,</li> <li>map and paths,</li> <li>login.</li> </ul>"},{"location":"ios/#system-structure","title":"System Structure","text":"<p>This section includes all configuration files necessary for building, distributing and running the application. These files are defined according to the XCode requirement and do not define the application processes themselves or the application data structure itself.</p>"},{"location":"ios/#global-structure","title":"Global Structure","text":"<p>This section describes the pieces of code, which are primally shared throughout the application.  The application uses User Default and Core Data as a local persistent storage. There is one Core Data model for the whole application defined in the PhotoModel.xcdatamodeld, which include the following entities:</p> <ul> <li>PersitPhoto<ul> <li>The captured photo as a binary picture data with all metadata.</li> </ul> </li> <li>PersistTask<ul> <li>The metadata of a task.</li> </ul> </li> <li>PTPath<ul> <li>The metadata of an entire recorded path.</li> </ul> </li> <li>PTPoint<ul> <li>The metadata of a point forming a recorded path.</li> </ul> </li> </ul> <p>Data about the user and application settings are stored in the User Default storage. This storage is accessed indirectly through classes UserStorage and SEStorage.</p> <p>All UI screens are defined in Main.storyboard. Description of files:</p> <ul> <li>AppDelegate.swift<ul> <li>The application delegate object that manages the application\u2019s shared behaviors. The application delegate is effectively the root object of whole app, and it works in conjunction with UIApplication to manage some interactions with the system:<ul> <li>Initializing your app\u2019s central data structures.</li> <li>Configuring your app\u2019s scenes.</li> <li>Responding to notifications originating from outside the app, such as low-memory warnings, download completion notifications, and more.</li> <li>Responding to events that target the app itself, and are not specific to your app\u2019s scenes, views, or view controllers. </li> <li>Registering for any required services at launch time, such as Apple Push Notification service.</li> </ul> </li> <li>Loads and holds the Core Data PhotoModel persistent container.</li> </ul> </li> <li>SceneDelegate.swift<ul> <li>Defines UIWindowSceneDelegate object to manage the life cycle of one instance of this application's user interface. The window scene delegate conforms to the UISceneDelegate property, and it is used to receive notifications when its scene connects to the application, enters the foreground, and so on.</li> </ul> </li> <li>extensions.swift<ul> <li>Contains extensions of all system classes.</li> </ul> </li> <li> <p>Model/PersistStorage.swift</p> <ul> <li>The base class registering all derived classes for access to the User Default storage.</li> </ul> </li> <li> <p>Model/ UserStorage.swift</p> <ul> <li>The class for accessing logged user data in the User Default storage.</li> </ul> </li> <li>Model/Setting/SEStorage.swift<ul> <li>The class for accessing application settings in the User Default storage.</li> </ul> </li> <li>Model/ Util.swift<ul> <li>The class containing general helper functions.</li> </ul> </li> <li>Model/Weak.swift<ul> <li>The class holder for weak reference.</li> </ul> </li> <li>Model/DB/DB.swift<ul> <li>The class that provides a private managed object context and a shared main managed object context for PhotoModel.</li> </ul> </li> <li>Model/DB/PersistPhoto+CoreDataClass.swift<ul> <li>Defines additional convenience methods inside the PersistPhoto managed object class.</li> </ul> </li> <li>Model/DB/PersistTask+CoreDataClass.swift<ul> <li>Defines additional convenience methods inside the PersistTask managed object class.</li> </ul> </li> <li>Assets.xcassets<ul> <li>Contains all pictures used in application.</li> </ul> </li> </ul>"},{"location":"ios/#taking-photos","title":"Taking Photos","text":"<p>The code in this section defines how to take, edit, view and send photos. This is linked to the following screens:</p> <ul> <li>Photo overview,</li> <li>Photo detail,</li> <li>Camera.</li> </ul> <p>Description of files:</p> <ul> <li>PhotosTableViewController.swift, PhotoTableViewCell.swift<ul> <li>The classes to view captured photos in a list structure and to delete these photos.</li> </ul> </li> <li>PhotoDetailViewCotroller.swift<ul> <li>The controller to view a captured photo in detail and to send this photo.</li> </ul> </li> <li>CameraViewController.swift<ul> <li>The controller to display the camera preview and current location data on the screen, and to take a geotagged photo from the camera.</li> <li>Uses PhotoDataController class.</li> </ul> </li> <li>Model/PhotoDataController.swift     data that are designed to be used to take a geotagged photo.</li> <li>Model/ConvexHull/\u2026<ul> <li>The classes for computing the convex hull centroid over location data.</li> </ul> </li> </ul>"},{"location":"ios/#task-management","title":"Task Management","text":"<p>The code in this section defines how to download, edit, view and send tasks. This is linked to the following screens:</p> <ul> <li>Task overview,</li> <li>Task detail,</li> <li>Photo gallery. Description of files:</li> <li>TasksTableViewController.swift, TasksTableViewCell.swift<ul> <li>Classes to download and view tasks in a list structure.</li> </ul> </li> <li>TaskViewController.swift<ul> <li>The controller to view a task in detail, to add a note, to list task photos and to send a task.</li> </ul> </li> <li>GalleryViewController.swift<ul> <li>The controller to display full screen task photos as a gallery.</li> </ul> </li> </ul>"},{"location":"ios/#application-settings","title":"Application Settings","text":"<p>The code in this section defines how to manage application settings. This is included in the Settings screen. Description of files:</p> <ul> <li>SettingsViewController.swift<ul> <li>The controller to view current settings in a list structure and to manipulate these settings.</li> </ul> </li> <li>Model/Setting/\u2026<ul> <li>Helper classes to display setting items and handling events on those items.</li> </ul> </li> <li>Model/Setting/SEStorage.swift<ul> <li>The class for accessing application settings in the User Default storage.</li> </ul> </li> </ul>"},{"location":"ios/#about-screen","title":"About Screen","text":"<p>The code in this section defines how to show information about the application. This is included in the About screen. Description of files:</p> <ul> <li>AboutViewController.swift<ul> <li>The controller to view the About page.</li> </ul> </li> </ul>"},{"location":"ios/#map-and-paths","title":"Map and Paths","text":"<p>The code in this section defines how to display photos on the map and to view, record, send and delete paths. This is linked to the following screens:</p> <ul> <li>Map,</li> <li>Path overview. Description of files:</li> <li>MapViewController.swift<ul> <li>The controller to view the map and to draw captured photos and recorded paths on this map.</li> <li>Draws captured photos on this map using processes defined in Map/Photos group.</li> <li>Controls the path recording process from UI and draws recorded or currently recording path on this map using the processes defined in Map/PathTracking group.</li> </ul> </li> <li>PathTrackTableViewController.swift, PathTrackTableViewCell.swift<ul> <li>The classes to view recorded path in a list structure and to delete these paths.</li> </ul> </li> <li>Map/Photos/\u2026<ul> <li>These files define views and classes to draw the captured photos on the map in the form of annotations.</li> </ul> </li> <li>Map/PathTracking/\u2026<ul> <li>These files define views and classes to draw the recorded path or currently recording path on the map in the form of annotations, polylines and polygons.</li> </ul> </li> <li>Map/PathTracking/PTPath+CoreDataClass.swift, Map/PathTracking/PTPoint+CoreDataClass.swift<ul> <li>Additional convenience methods inside the PTPath and PTPoint managed object classes.</li> </ul> </li> </ul>"},{"location":"ios/#login_1","title":"Login","text":"<p>The code in this section defines the user login process to the application. This is linked to the Login screen. Description of files:</p> <ul> <li>LoginViewController.swift<ul> <li>The controller to view the login screen and to manage the login process.</li> <li>It stores data about the logged user in the UserStorage.</li> </ul> </li> </ul>"},{"location":"ios/#gnss_scan-library","title":"Gnss_scan Library","text":"<p>This library provides the ability to receive and process GNSS data and mobile network data in real time in a convenient way by registering callbacks to scanners of the mobile network and data from location satellites. This library is dependent on convex_hull library. The primary purposes of this library are:</p> <ul> <li>receive GNSS data and enable their further processing</li> <li>receive mobile network data and enable their further processing</li> </ul>"},{"location":"web-console-tasklist/","title":"Web Console Interface","text":""},{"location":"web-console-tasklist/#web-console-interface","title":"Web Console Interface","text":"<p>The web console is accessible through the following link: https://www.pic2bim.co.uk/</p>"},{"location":"web-console-tasklist/#10-login-screen","title":"1.0 Login screen","text":"<ul> <li> Login screen</li> </ul> <p>Fig. 34 Web Console login</p>"},{"location":"web-console-tasklist/#21-task-list","title":"2.1 Task List","text":"<ul> <li> Task List</li> </ul> <p>Fig.36 Tasks and Map</p>"},{"location":"web-console-tasklist/#210-tasks-status","title":"2.1.0 Tasks Status","text":"<ul> <li> Task Status</li> </ul> <p>Fig. 37 Tasks Status</p>"},{"location":"web-console-tasklist/#211-open-task-detail-actions","title":"2.1.1 Open task detail actions","text":"<ul> <li> Task data on map</li> <li> Photo marker on map</li> <li> Search for tasks</li> <li> Cancel Sorting</li> <li> Filter tasks</li> </ul> <ul> <li> Sort tasks</li> </ul>"},{"location":"web-console-tasklist/#220-task-detail-page","title":"2.2.0 Task Detail page","text":"<ul> <li> Task Detail page</li> </ul> <p>Fig.38 Task detail actions</p> <ul> <li> Display a page with unassigned photos</li> <li> Photos can be rotated</li> </ul> <p></p> <ul> <li> Click on the photo to open the Photo Gallery</li> </ul>"},{"location":"web-console-tasklist/#223-user-can-select-photos-for-export-to-pdf","title":"2.2.3 User can select photos for export to PDF","text":""},{"location":"web-console-tasklist/#224-pdf-export-functionality","title":"2.2.4 PDF export functionality","text":"<ul> <li> PDF export functionality</li> </ul>"},{"location":"web-console-tasklist/#31-standalone-photos-gallery","title":"3.1 Standalone photos gallery","text":"<ul> <li> Standalone photos gallery</li> </ul> <p>Fig. 40 Unassigned photos</p>"},{"location":"web-console-tasklist/#311-rotation","title":"3.1.1 Rotation","text":"<ul> <li> Rotation</li> </ul>"},{"location":"web-console-tasklist/#312-delete","title":"3.1.2 Delete","text":"<ul> <li> Delete</li> </ul>"},{"location":"web-console-tasklist/#313-select-for-an-action","title":"3.1.3 Select for an action","text":""},{"location":"web-console-tasklist/#314-bulk-actions","title":"3.1.4 Bulk actions","text":"<ul> <li> Select all</li> <li> Cancel selection</li> <li> Choose task</li> </ul>"},{"location":"web-console-tasklist/#315-displays-a-page-where-you-can-select-the-task","title":"3.1.5 Displays a page where you can select the task:","text":""},{"location":"web-console-tasklist/#316-delete-selected-photos","title":"3.1.6 Delete selected photos","text":"<ul> <li> Delete selected photos</li> </ul>"},{"location":"web-console-tasklist/#317-export-all-to-pdf","title":"3.1.7 Export all to PDF","text":"<ul> <li> Export all to PDF</li> </ul>"},{"location":"web-console-tasklist/#318-export-selected-to-pdf","title":"3.1.8 Export selected to PDF","text":"<ul> <li> Export selected to PDF</li> </ul> <p>Photo gallery</p> <p></p> <p>Fig. 41 Photo gallery</p>"},{"location":"web-console-tasklist/#319-control-panel","title":"3.1.9 Control panel","text":"<ul> <li> Zoom in</li> <li> Zoom out</li> <li> Reset zoom</li> </ul>"},{"location":"web-console-tasklist/#41-user-paths","title":"4.1 User paths","text":"<ul> <li> User paths</li> </ul> <p>Fig. 42 User paths</p>"},{"location":"web-console-tasklist/#410-highlighted-path-with-point-detail","title":"4.1.0 Highlighted path with point detail","text":"<ul> <li> Highlighted path with point detail</li> </ul> <p>Fig. 43 Highlighted path with point detail</p> <ul> <li> delete path</li> </ul> <p> </p>"},{"location":"web-console-tasklist/#411-generating-pdf-documents-actions","title":"4.1.1 Generating PDF documents actions","text":"<ul> <li> Export all to PDF</li> </ul> <p>Fig. 44 PDF generating prepare page</p> <p> </p> <p>Fig. 45 Progress loader</p> <ul> <li> Export selected to PDF</li> </ul> <p></p> <p>Fig. 46 Selected photo</p>"},{"location":"web-console-tasklist/#50-map","title":"5.0 Map","text":"<p>Fig. 47 Map</p>"},{"location":"web-console-tasklist/#510-map-active-status-markers","title":"5.1.0 Map active status markers","text":"<ul> <li> new</li> <li> open</li> <li> data provided</li> <li> data checked (green)</li> <li> data checked (red)</li> <li> returned</li> <li> unassigned photos are not color* coded.</li> </ul> <p>Fig. 44 Task status list</p>"},{"location":"web-console-tasklist/#511-map-middle-zoom","title":"5.1.1 Map middle zoom","text":"<ul> <li> middle zoom</li> <li> grouped into one group with a numerical expression</li> <li> Click on the group icon to zoom in on the group position</li> <li> preview banners that display a specific user</li> <li> the name of the task, the photo and </li> <li> the radius of the camera view at the time the photo was taken.</li> <li> Clicking on this banner opens the following task detail</li> <li> Polygons of existing plots and their names are also shown. </li> </ul> <p>Fig. 48 Map a middle zoom</p> <p></p> <p>Fig. 49 Map \u2013 detail zoom in</p>"},{"location":"web-console-tasklist/#60-administrator","title":"6.0 Administrator","text":""},{"location":"web-console-tasklist/#610-user-role","title":"6.1.0 User role","text":"<ul> <li> User role</li> <li> Change Password</li> </ul>"},{"location":"web-console-tasklist/#611-officer-role","title":"6.1.1 Officer role","text":"<ul> <li> Officer role</li> <li> Search for tasks</li> <li> Cancel Sorting</li> </ul> <ul> <li> Filter tasks</li> </ul> <ul> <li> Sort tasks</li> </ul> <ul> <li> Actions<ul> <li> edit user (Editation)<ul> <li> login</li> <li> Password</li> <li> Name</li> <li> E-mail</li> <li> Identification number</li> <li> Vat</li> <li> SAVE</li> <li> CLOSE</li> </ul> </li> <li> deactivate (new function added)</li> <li> Change status of task<ul> <li> new</li> <li> open</li> <li> data provided</li> <li> data checked (green)</li> <li> data checked (red)</li> <li> returned</li> <li> unassigned photos are not color* coded.</li> </ul> </li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#612-super-admin-role","title":"6.1.2 Super-admin role","text":"<ul> <li> Super-admin role</li> <li> manage existing ones</li> </ul> <p>Fig. 35 Web Change Password</p>"},{"location":"web-console-tasklist/#user-management","title":"User management","text":"<p>Fig. 50 User management</p> <p></p> <ul> <li>Sort users in the list by the selected column (by clicking on the column heading)</li> </ul> <p></p> <ul> <li>Open user detail</li> </ul> <p></p> <p> </p> <ul> <li> <p>Add a new user</p> </li> <li> <p>By clicking on the button, a table is displayed in which it is necessary to fill in the data of the new user</p> </li> <li> <p>The creation of a new user is confirmed by pressing the Save button.</p> </li> <li> <p>The entered login and password will be used by the user to access the application.</p> </li> </ul> <p></p> <ul> <li>Edit an existing user</li> </ul> <p></p> <ul> <li>Clicking the button displays the same table as when creating a new user</li> </ul> <p>In this case, the table is pre * populated with the data of the selected user</p> <p>The data can be edited in the table (except for the login) and their modification can be confirmed with the Save button.</p> <p>If the password field is left blank,the password remains the same.</p>"},{"location":"web-console-tasklist/#user-detail","title":"User Detail","text":"<p>Fig. 51 Tasks  Administrator</p> <p>This page is the same as in the user's approach, extended by the following:</p> <ul> <li>New task</li> </ul> <p></p> <ul> <li>Clicking on the button displays a table in which it is necessary to fill in the data of the new task. The creation of a new task is confirmed by pressing the Save button. A new task is created with the status \"new\"</li> </ul> <p></p> <ul> <li> <p>Bulk task approval function</p> </li> <li> <p>To perform a bulk approval, you must first mark the tasks to be approved. By checking the box for the required tasks in the right column of the table.</p> </li> <li> <p>Only tasks with the status \"data provided\" can be approved.</p> </li> <li> <p>After pressing the Approve in bulk button, a dialog box is displayed, where after pressing the OK button, the bulk action will be performed.</p> </li> <li> <p>Approval of tasks changes their status to \"data checked\" and the acceptance status to \"Approved\".</p> </li> <li> <p>Photos</p> </li> <li> <p>The decoration Examined column graphically shows whether the photo checks were OK or not.</p> </li> <li> <p>This involves checking the correctness of the position and checking the originality of the photo.</p> </li> <li> <p>Complete control information is displayed in the task detail for each photo.</p> </li> </ul>"},{"location":"web-console-tasklist/#task-detail","title":"Task Detail","text":"<p>Fig. 51 Task detail \u2013 Administrator view</p> <p>This page is the same as in the user's approach, extended by the following:</p>"},{"location":"web-console-tasklist/#task-detail-actions","title":"Task Detail Actions","text":"<ul> <li> <p>Approve </p> </li> <li> <p>\"data checked\"and the reception status</p> </li> <li> <p>\"Approved\".</p> </li> <li> <p>Reject </p> <ul> <li> <p>This action is available with the status</p> </li> <li> <p>\"data provided\", and results in the rejection of a task.</p> </li> <li> <p>After pressing theReject button, a dialog box is displayed,where it is possible to enter a comment for rejection, and after pressing OK, the action will be performed.</p> </li> <li> <p>The result of the action is the setting of the status \"data checked\" and the acceptance status \"Rejected\".</p> </li> </ul> </li> <li> <p>Return to user </p> </li> <li> <p>This action is available with the status \"data provided\". It allows you to return the task to the user for completion.</p> </li> <li> <p>After pressing the Undo button, a dialog box is displayed, where it is possible to enter a comment to     be undone, and after pressing OK, the action will be performed.</p> </li> <li> <p>The result of the action is the setting of the status \"returned\".</p> </li> <li> <p>Move to \"data provided\" </p> </li> <li> <p>This event is available with an \"open\"status. It allows you to move the task to \"data provided\" status.</p> </li> <li> <p>After pressing the Move button, a dialog box is displayed, where it is possible to enter a comment,     and after pressing OK, the action will be performed.</p> </li> <li> <p>The result of the action is the     setting of the status \"data provided\". </p> </li> <li> <p>Delete</p> </li> <li> <p>This action is available with the status \"new\".     It allows you to delete a task.</p> </li> <li> <p>After pressing the Delete button, a dialog box is displayed, where after pressing OK the action is performed.</p> </li> <li> <p>The result of the action is deleting of the task.</p> </li> <li> <p>Verification of photos</p> </li> <li> <p>The Examined column graphically shows whether     the photo checks were OK or not.     This involves checking the correctness of the position and checking the originality of the photo.</p> </li> <li> <p>View complete photo review information</p> </li> <li> <p>The table of photo data shows the results of the performed checks in color.</p> </li> </ul>"},{"location":"web-console-tasklist/#super-administrator","title":"Super-administrator","text":"<p>After logging in, the Agency management page is displayed.</p> <p></p> <p>Fig. 53 Agency management  </p>"},{"location":"web-console-tasklist/#agency-list","title":"Agency list","text":"<p>This page offers the following features:</p> <ul> <li>Add new agency</li> </ul> <p></p> <ul> <li>Clicking on the button displays a table in which it is necessary to fill in the name of the new agency. The creation of the agency is confirmed by pressing the Save button.</li> </ul> <p></p> <p>Open detail of the agency by clicking on a row of specified agency.</p> <p> </p>"},{"location":"web-console-tasklist/#agency-detail","title":"Agency detail","text":"<p>Fig. 54 Officers management</p>"},{"location":"web-console-tasklist/#add-a-new-officer","title":"Add a new officer","text":"<ul> <li> <p>By clicking on the button, a table is displayed in which it is necessary to fill in the data of the new officer. The creation of a new officer is confirmed by pressing the Save button.</p> </li> <li> <p>The entered login and password will be used by the user to access the application.</p> </li> </ul> <p></p>"},{"location":"web-console-tasklist/#edit-an-existing-officer","title":"Edit an existing officer","text":"<ul> <li> <p>Clicking the button displays the same table as when creating a new officer. In this case, the table is pre * populated with the data of the selected officer. The data can be edited in the table (except for the login) and their modification can be confirmed with the Save button.</p> </li> <li> <p>If the password field is left blank,the password remains the same.</p> </li> </ul>"},{"location":"web-console-tasklist/#deactivate-an-existing-officer","title":"Deactivate an existing officer","text":"<ul> <li> <p>After pressing the Deactivate button, a dialog box is displayed, where after pressing OK the action is performed.</p> </li> <li> <p>The result of the action is deactivation of the selected officer.</p> </li> <li> <p>The deactivated officer will be no more able to log in into application.</p> </li> </ul>"},{"location":"web-console-tasklist/#appendix-a-hosting-and-installing-the-web-console","title":"Appendix A: Hosting and installing the web console","text":""},{"location":"web-console-tasklist/#hosting-requirements","title":"Hosting requirements","text":"<ul> <li>Php7 engine</li> <li>MySQL 8 database server</li> <li>Apache2 webserver</li> </ul>"},{"location":"web-console-tasklist/#server-resources-requirements","title":"Server resources requirements","text":"<ul> <li>min 8GB RAM</li> <li>min 2 core cpu</li> <li>min 10GB disk space</li> </ul>"},{"location":"web-console-tasklist/#installation-steps-for-the-webconsole","title":"Installation steps for the webconsole","text":"<p>copy the web console files into the selected webroot directory create VirtualHost section in the Apache2 configuration and point it to selected directory make sure that there is set a directive DirectoryIndex index.php</p> <p>write the database name, database user and the corresponding password into the web console configuration file _includes.php</p> <pre><code>switch (SERVER) {\n  case 'UAT':\n    define('SYSTEM_HOST', '&lt;https://mybohostname&gt;');\n    define('DB_TYPE', 'mysqli');\n    define('DB_HOST', 'localhost');\n    define('DB_USER', 'root');\n    define('DB_PASSWORD', 'xxxx');\n    define('DB_SCHEMA', 'egnss4all');\n    break;\n</code></pre> <pre><code> case 'LOCALHOST':\n    define('SYSTEM_HOST', '&lt;https://mybohostname&gt;');\n    define('DB_TYPE', 'mysqli');\n    define('DB_HOST', 'localhost');\n    define('DB_USER', 'xxxx');\n    define('DB_PASSWORD', 'xxxx');\n    define('DB_SCHEMA', 'egnss4all');\n    ini_set('display_errors', 0);\n    break;\n}\n</code></pre> <p>run\u00a0http://your * domain.tld</p>"},{"location":"web-console-tasklist/#appendix-b-developer-documentation","title":"Appendix B: Developer Documentation","text":""},{"location":"web-console-tasklist/#technologies","title":"Technologies","text":"<ul> <li>OOP PHP (Object * Oriented Programming)</li> <li>TWIG templates</li> <li>MySQL database</li> <li>DIBI framework for DB query</li> <li>HTML, CSS, Javascript</li> <li>Bootstrap 4.4.1 framework, jquery framework</li> <li>Google maps API</li> <li>MPDF framework for generating PDF</li> <li>html2canvas.js plugin</li> </ul>"},{"location":"web-console-tasklist/#classes-description","title":"Classes description","text":"<ul> <li>Index</li> <li>managing farmers</li> <li>loading farmer list and tasks</li> <li>login</li> <li>login user</li> <li>logout user</li> <li>verifying users</li> <li>task</li> <li>adding tasks</li> <li>loading task info and photos</li> <li>accepting, declining and deleting tasks</li> <li>changing task status</li> <li>loading photos and photos metadata</li> <li>loading shapes</li> <li>assign unassigned photos to task</li> <li>generating PDF</li> <li>user</li> <li>managing users and roles</li> <li>loading the unassigned photos and tasks of users</li> <li>managing photo rotation</li> </ul>"},{"location":"web-console-tasklist/#structure","title":"Structure","text":"<ul> <li>CSS</li> <li>cascade styles for web pages</li> <li>ENGINE</li> <li>framework and classes</li> <li>FONTS</li> <li>fonts for web pages</li> <li>IMG</li> <li>images for web</li> <li>JS</li> <li>javascript files for web and map</li> <li>PHOTOS</li> <li>photos downloaded from phones</li> <li>TEMPLATES</li> <li>TWIG templates for web</li> <li>VENDOR</li> <li>frameworks</li> </ul>"},{"location":"web-console-tasklist/#web-services-and-database","title":"Web Services and Database","text":"<p>Below is a technical overview of the implemented web services for the PIC2BIM application and their features.</p>"},{"location":"web-console-tasklist/#installation-web-services","title":"Installation Web Services","text":"<p>https://github.com/buildvoc/EGNSS4ALLSERVICES</p> <ul> <li>Install PHP version 8, enable GDI module in PHP</li> <li>Install Apache2</li> <li>Install MySql Database following instructions on https://github.com/buildvoc/EGNSS4ALLDATABASE</li> <li>Copy project files in a web accessible directory of Apache</li> <li>Modify the file engine/db_fx.php accordingly to your MySql database setup</li> <li>Create a writable by apache directory named \"photos4all\" on the same level of the project main path</li> </ul>"},{"location":"web-console-tasklist/#installation-database","title":"Installation Database","text":"<ul> <li>Install MySql database 8</li> <li>Create a Database named \"egnss4all\"</li> <li>Import sql file into mysql to init database</li> </ul>"},{"location":"web-console-tasklist/#check-user-by-login-and-pswd","title":"check user by login and pswd","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_login.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>login \u2013 string(255)</li> <li>pswd  *  string(255)</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>user \u2013 number \u2013 user ID for login, if exists</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#sends-geometry-shapes-for-rectangle","title":"sends geometry shapes for rectangle","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_shapes.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>max_lat \u2013 float</li> <li>min_lat \u2013 float</li> <li>max_lng \u2013 float</li> <li>min_lng \u2013 float</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>shapes \u2013 array</li> <li>identificator \u2013 string \u2013 shape identificator</li> <li>wgs_geometry \u2013 json \u2013 geometry of shape</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#sends-photos-for-task-or-user","title":"sends photos for task or user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_task_photos.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>task_id \u2013 number \u2013 task identificator</li> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photos \u2013 array</li> <li>note \u2013 string \u2013 user note</li> <li>lat \u2013 float \u2013 latitude of photo</li> <li>lng \u2013 float \u2013 longitute of photo</li> <li>photo_heading \u2013 number \u2013 photo azimuth</li> <li>created \u2013 datetime \u2013 date and time of photo creation</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> <li>digest \u2013 string \u2013 hash of photo</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#sends-tasks-for-user","title":"sends tasks for user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_tasks.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>tasks \u2013 array</li> <li>id \u2013 number \u2013 task identificator</li> <li>status \u2013 string \u2013 task status</li> <li>name \u2013 string \u2013 task name</li> <li>text \u2013 string \u2013 description of task</li> <li>text_returned \u2013 string \u2013 description why is returned</li> <li>date_created \u2013 datetime \u2013 date of create task</li> <li>task_due_date \u2013 datetime \u2013 task due date</li> <li>note \u2013 string \u2013 task note</li> <li>number_of_photos \u2013 number \u2013 number of photos for task</li> <li>flag_valid \u2013 string \u2013 task is accepted</li> <li>flag_invalid \u2013 string \u2013 task is declined</li> <li>photos_ids \u2013 array of numbers \u2013 IDs of task photos</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#receive-task-data-from-phone","title":"receive task data from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_update.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters</li> <li>task_id \u2013 number \u2013 task identificator</li> <li>user_id \u2013 number \u2013 user identificator</li> <li>status \u2013 string \u2013 task statuses</li> <li>note \u2013 string \u2013 task note</li> <li>photos \u2013 array<ul> <li>note \u2013 string \u2013 photo note</li> <li>lat \u2013 float \u2013 photo latitude</li> <li>lng \u2013 float \u2013 photo longitude</li> <li>altitude</li> <li>bearing</li> <li>magnetic_azimuth</li> <li>photo_heading</li> <li>pitch</li> <li>roll</li> <li>photo_angle</li> <li>orientation</li> <li>horizontalViewAngle</li> <li>verticalViewAngle</li> <li>accuracy</li> <li>deviceManufacture</li> <li>deviceModel</li> <li>devicePlatform</li> <li>deviceVersion</li> <li>satsInfo</li> <li>extraSatCount</li> <li>NMEAMessage</li> <li>networkInfo</li> <li>created \u2013 datetime \u2013 date of photo creation</li> <li>digest \u2013 string \u2013 photo hash</li> <li>efkLatGpsL1</li> <li>efkLngGpsL1</li> <li>efkAltGpsL1</li> <li>efkTimeGpsL1</li> <li>efkLatGpsL5</li> <li>efkLngGpsL5</li> <li>efkAltGpsL5</li> <li>efkTimeGpsL5</li> <li>efkLatGpsIf</li> <li>efkLngGpsIf</li> <li>efkAltGpsIf</li> <li>efkTimeGpsIf</li> <li>efkLatGalE1</li> <li>efkLngGalE1</li> <li>efkAltGalE1</li> <li>efkTimeGalE1</li> <li>efkLatGalE5</li> <li>efkLng GalE5</li> <li>efkAlt GalE5</li> <li>efkTimeGalE5</li> <li>efkLatGalIf</li> <li>efkLngGalIf</li> <li>efkAltGalIf</li> <li>efkTimeGalIf</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#sends-paths-for-user","title":"sends paths for user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_get_paths.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON</li> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>paths \u2013 array</li> <li>id \u2013 number \u2013 identificator</li> <li>name  *  string</li> <li>start \u2013 datetime \u2013 start of tracking datetime</li> <li>end \u2013 datetime \u2013 end of tracking datetime</li> <li>area \u2013 float \u2013 path area in m2</li> <li>device_manufacture  *  string</li> <li>device_model  *  string</li> <li>device_platform  *  string</li> <li>device_version  *  string</li> <li>points \u2013 array<ul> <li>id \u2013 number \u2013 identificator</li> <li>lat  *  float</li> <li>lng  *  float</li> <li>altitude  *  float</li> <li>accuracy  *  float</li> <li>created  *  datetime</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#sends-photo-by-id","title":"sends photo by ID","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_get_photo.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>photo_id \u2013 number \u2013 photo identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photo \u2013 object</li> <li>note \u2013 string \u2013 photo note</li> <li>lat \u2013 float \u2013 photo lattitude</li> <li>lng \u2013 float \u2013 photo longitude</li> <li>photo_heading \u2013 number \u2013 heading in degrees</li> <li>created \u2013 datetime</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> <li>digest \u2013 string \u2013 photo hash</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#receive-path-from-phone","title":"receive path from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_path.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> <li>name  *  string</li> <li>start \u2013 datetime \u2013 start of tracking datetime</li> <li>end \u2013 datetime \u2013 end of tracking datetime</li> <li>area \u2013 float \u2013 path area in m2</li> <li>device_manufacture  *  string</li> <li>device_model  *  string</li> <li>device_platform  *  string</li> <li>device_version  *  string</li> <li>points \u2013 array</li> <li>lat  *  float</li> <li>lng  *  float</li> <li>altitude  *  float</li> <li>accuracy  *  float</li> <li>created  *  datetime</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>path_id \u2013 number \u2013 ID of received path</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#receive-photo-data-from-phone","title":"receive photo data from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_photo.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>task_id \u2013 number \u2013 task identificator</li> <li>user_id \u2013 number \u2013 user identificator</li> <li>photos \u2013 array</li> <li>note \u2013 string \u2013 photo note</li> <li>lat \u2013 float \u2013 photo latitude</li> <li>lng \u2013 float \u2013 photo longitude</li> <li>centroidLat</li> <li>centroidLng</li> <li>altitude</li> <li>bearing</li> <li>magnetic_azimuth</li> <li>photo_heading</li> <li>pitch</li> <li>roll</li> <li>photo_angle</li> <li>orientation</li> <li>horizontalViewAngle</li> <li>verticalViewAngle</li> <li>accuracy</li> <li>deviceManufacture</li> <li>deviceModel</li> <li>devicePlatform</li> <li>deviceVersion</li> <li>satsInfo</li> <li>extraSatCount</li> <li>NMEAMessage</li> <li>networkInfo</li> <li>created \u2013 datetime \u2013 date of photo creation</li> <li>digest \u2013 string \u2013 photo hash</li> <li>efkLatGpsL1</li> <li>efkLngGpsL1</li> <li>efkAltGpsL1</li> <li>efkTimeGpsL1</li> <li>efkLatGpsL5</li> <li>efkLngGpsL5</li> <li>efkAltGpsL5</li> <li>efkTimeGpsL5</li> <li>efkLatGpsIf</li> <li>efkLngGpsIf</li> <li>efkAltGpsIf</li> <li>efkTimeGpsIf</li> <li>efkLatGalE1</li> <li>efkLngGalE1</li> <li>efkAltGalE1</li> <li>efkTimeGalE1</li> <li>efkLatGalE5</li> <li>efkLng GalE5</li> <li>efkAlt GalE5</li> <li>efkTimeGalE5</li> <li>efkLatGalIf</li> <li>efkLngGalIf</li> <li>efkAltGalIf</li> <li>efkTimeGalIf</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photo_id \u2013 number \u2013 ID of received photo</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#receive-task-data-from-phone_1","title":"receive task data from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_status.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>task_id \u2013 number \u2013 task identificator</li> <li>status \u2013 string \u2013 task statuses</li> <li>note \u2013 string \u2013 task note</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> </ul> </li> </ul>"},{"location":"web-console-tasklist/#sends-ids-of-unassigned-photos-for-user","title":"sends IDs of unassigned photos for user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_unassigned.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photos_ids \u2013 array of numbers \u2013 IDs of unassigned photos</li> </ul> </li> </ul>"},{"location":"web-console/","title":"Web Console Interface","text":""},{"location":"web-console/#web-console-interface","title":"Web Console Interface","text":"<p>The web console is accessible through the following link: https://www.pic2bim.co.uk/</p>"},{"location":"web-console/#user-roles","title":"User roles","text":"<p>User role</p> <ul> <li>Have access to his tasks and photos, but is not able to do any operations.</li> </ul> <p>Officer role</p> <ul> <li>Have access to all users that belong under his agency, can move tasks between states.</li> </ul> <p>Super-admin role</p> <ul> <li> <p>Have access to Agency management module. Can create new agencies and     manage existing ones.</p> </li> <li> <p>Does not have access to standard application.</p> </li> </ul>"},{"location":"web-console/#login-screen","title":"Login screen","text":"<p>To log in to the web interface, enter your login details.</p> <p> </p> <p>Fig. 34 Web Console login</p>"},{"location":"web-console/#change-password","title":"Change Password","text":"<p>After logging in to the platform, every user can change his password to a more fitting one using the button in the top right area of the console.</p> <p></p> <p></p> <p>To change the current logged user password, fill in a new password and the confirmation in the change password form. A message will warn you of your action and if confirmed your password will change to the new one.</p> <p></p> <p>Fig. 35 Web Change Password</p> <p>User access</p> <p>The default page after login is the Task list.</p>"},{"location":"web-console/#tasks","title":"Tasks","text":""},{"location":"web-console/#21-task-list","title":"2.1 Task List","text":"<p>The bottom part shows the assigned tasks, which can be sorted, filtered and searched. In the top part, points representing individual tasks are displayed on the map. Map is shown by default.</p> <p></p> <p>Fig.36 Tasks and Map</p> <p>The following options are available for the user:</p>"},{"location":"web-console/#211-open-task-detail","title":"2.1.1 Open task detail","text":"<ul> <li>(by clicking on the selected row in the list)</li> </ul>"},{"location":"web-console/#212-search-for-tasks","title":"2.1.2 Search for tasks","text":"<ul> <li>by the specific text</li> </ul>"},{"location":"web-console/#213-filter-tasks","title":"2.1.3 Filter tasks","text":"<ul> <li>by status (by clicking on the selected status)</li> </ul>"},{"location":"web-console/#214-sort-tasks","title":"2.1.4 Sort tasks","text":"<ul> <li>in a list by the selected column (by clicking on the column heading) or according to the date of completion of the task (with the button \"Passed to the end\")</li> </ul>"},{"location":"web-console/#215-display-a-page-with-unassigned-photos","title":"2.1.5 Display a page with unassigned photos","text":""},{"location":"web-console/#216-display-a-page-with-paths","title":"2.1.6 Display a page with paths","text":"<p>Browse the map and open the task detail by clicking on a point on the map  </p> <p></p> <p>Fig. 37 Tasks Status</p>"},{"location":"web-console/#220-task-detail-page","title":"2.2.0 Task Detail page","text":"<p>This page contains detailed information about the task, as well as photos that were taken for the task. The map shows the position of the photos, the viewing radius of the camera and the direction of the photo.</p> <p></p> <p>Fig.38 Task detail</p>"},{"location":"web-console/#221-photos-can-be-rotated","title":"2.2.1 Photos can be rotated","text":"<p>here using the buttons:</p> <p></p>"},{"location":"web-console/#222-click-on-the-photo-to-open-the-photo-gallery","title":"2.2.2 Click on the photo to open the Photo Gallery","text":"<p>A table with source data is placed next to each photo.</p>"},{"location":"web-console/#223-user-can-select-photos-for-export-to-pdf","title":"2.2.3 User can select photos for export to PDF","text":"<p>PDF export functionality is described below.</p>"},{"location":"web-console/#30-photos","title":"3.0 Photos","text":""},{"location":"web-console/#31-standalone-photos-gallery","title":"3.1 Standalone photos gallery","text":"<p>At the top of the page, a map is displayed, where the position of individual unassigned photos is marked.</p> <p>Fig. 39 Standalone task unassigned photos</p> <p>Below are photos that are not assigned to any task. A table with source data is placed next to each photo.</p> <p></p> <p>Fig. 40 Unassigned photos</p> <p>Several options are available to edit the photos:</p>"},{"location":"web-console/#311-rotation","title":"3.1.1 Rotation","text":""},{"location":"web-console/#312-delete","title":"3.1.2 Delete","text":""},{"location":"web-console/#313-select-for-an-action","title":"3.1.3 Select for an action","text":"<ul> <li>By clicking the Select button, the photo is marked for the bulk assignment to a task, to a bulk delete or bulk export to PDF</li> </ul> <ul> <li>Selected photos are marked by the red rectangle. Open photo gallery \u2013 click on the photo (see below)</li> </ul>"},{"location":"web-console/#314-when-selecting-bulk-actions-the-following-options-are-available","title":"3.1.4 When selecting bulk actions, the following options are available","text":"<p>Select all</p> <p>Selects all unassigned photos</p> <ul> <li>Cancel selection</li> </ul> <p>Cancels current selection</p> <ul> <li>Choose task</li> </ul>"},{"location":"web-console/#315-displays-a-page-where-you-can-select-the-task","title":"3.1.5 Displays a page where you can select the task:","text":"<p>to which the selected photos are to be assigned.  For recapitulation, the photos that were marked on the previous page are displayed here.  Below the photos, a selection box is available, where it is necessary to select the target task. The map is displayed at the top of the page.</p> <ol> <li>After clicking the Confirm button, a dialog box will appear, where by pressing the OK button, the process of assigning photos will be completed.</li> <li>Once finished, the user is navigated back to the Task list screen.</li> </ol>"},{"location":"web-console/#316-delete-selected-photos","title":"3.1.6 Delete selected photos","text":"<p>Displays a dialog box where, after confirmation by pressing OK, the marked photos will be deleted</p>"},{"location":"web-console/#317-export-all-to-pdf","title":"3.1.7 Export all to PDF","text":"<p>This button pass all photos to PDF export</p>"},{"location":"web-console/#318-export-selected-to-pdf","title":"3.1.8 Export selected to PDF","text":"<p>This button pass selected photos to PDF export</p> <p>PDF export functionality is described below.</p>"},{"location":"web-console/#photo-gallery","title":"Photo gallery","text":"<p>The gallery is accessible from various places in the application, always by clicking on the photo.</p> <p></p> <p>Fig. 41 Photo gallery  </p>"},{"location":"web-console/#319-control-panel","title":"3.1.9 Control panel","text":"<p>At the bottom is the control panel, where you can rotate the photo and jump between photos using the arrows.</p> <p>Clicking on a photo in the gallery opens a new window in which the photo is loaded in its maximum size and it is possible to </p> <ul> <li>Zoom in</li> <li>Zoom out</li> <li>Reset zoom or set the default size  change is for preview only, and will not be saved.</li> </ul> <p> </p>"},{"location":"web-console/#40-paths","title":"4.0 Paths","text":""},{"location":"web-console/#41-user-paths","title":"4.1 User paths","text":"<p>At the top of the page, a map is displayed, where all of the paths are shown.</p> <p></p> <p>Fig. 42 User paths</p> <p>Paths can be highlighted by clicking on the map. Each path has displayed points of which it is composed. Click on the point to display a table with detailed information.</p> <p></p> <p>Fig. 43 Highlighted path with point detail</p> <p>Below is a list of paths of the selected user. Only selected routes can be displayed on the map using the checkbox in the Show on map column.</p> <p>Paths can be deleted using delete path.</p> <p> </p>"},{"location":"web-console/#411-generating-pdf-documents","title":"4.1.1 Generating PDF documents","text":"<p>The functionality of exporting data to PDF is triggered by buttons:</p> <p></p> <p>The buttons are available at the Unassigned photos page and the Task detail page.</p> <p>The button (Export all to PDF) passes all photos at current page to a PDF export and open a PDF prepare page.</p> <p></p> <p>Fig. 44 PDF generating prepare page</p> <p>On the PDF prepare page are displayed all the photos which are going to be exported. Every photo has its own map generated especially for the PDF which can be adjusted before export. Once everything is prepared (progress loader disappears), export is executed by clicking the \u201cGenerate\u201d button.</p> <p>Generating PDF can take some time, which depends on total count of exported photos. The user is informed by progress loader.</p> <p> </p> <p>Fig. 45 Progress loader</p> <p>The button \u201cExport selected to PDF\u201d passes to the PDF export just the selected photos:</p> <p></p> <p>Fig. 46 Selected photo</p> <p>Next steps of the exporting process are identical to process steps described above (\u201cExport all to PDF\u201d).</p>"},{"location":"web-console/#50-map","title":"5.0 Map","text":"<p>Fig. 47 Map</p> <p>Points that represent photos or tasks displayed on the currently open page are always displayed on the map.</p> <p>The zoom of the map is automatically set so that all points are visible in the displayed area of the map. The zoom can be adjusted manually (with the mouse wheel or using the control panel on the map).</p> <p>The points are color coded according to the active status of the task. The color of the points corresponds to the color of the status in the task list. Points representing unassigned photos are not color coded.</p> <p></p> <p>Fig. 44 Task status list</p> <p>Click on a map point to open the task detail.</p> <p></p> <p>Fig. 48 Map a middle zoom</p> <p>Due to the possible high concentration of points in a small area, the points are grouped into one group with a numerical expression of the number of points in a given place. Click on the group icon to zoom in on the group position. As you zoom in greatly on the map, points are changed to preview banners that display a specific user, the name of the task, the photo and the radius of the camera view at the time the photo was taken. Clicking on this banner opens the following task detail.</p> <p>Polygons of existing plots and their names are also shown.</p> <p></p> <p>Fig. 49 Map \u2013 detail zoom in</p>"},{"location":"web-console/#60-administrator","title":"6.0 Administrator","text":"<p>After logging in, the user management page is displayed. Graphically and functionally, the application is the same as in the approach for users. In the administrator access, controls are added as described below.</p>"},{"location":"web-console/#user-management","title":"User management","text":"<p>Fig. 50 User management</p> <p>At the top is a map with all the tasks of all users. At the bottom is a list of users.</p> <p>The following options can be used:</p> <ul> <li>Search for a user according to the entered text</li> </ul> <p></p> <ul> <li>Sort users in the list by the selected column (by clicking on the column heading)</li> </ul> <p></p> <ul> <li>Open user detail</li> </ul> <p></p> <p> </p> <ul> <li> <p>Add a new user</p> </li> <li> <p>By clicking on the button, a table is displayed in which it is necessary to fill in the data of the new user</p> </li> <li> <p>The creation of a new user is confirmed by pressing the Save button.</p> </li> <li> <p>The entered login and password will be used by the user to access the application.</p> </li> </ul> <p></p> <ul> <li>Edit an existing user</li> </ul> <p></p> <ul> <li>Clicking the button displays the same table as when creating a new user</li> </ul> <p>In this case, the table is pre * populated with the data of the selected user</p> <p>The data can be edited in the table (except for the login) and their modification can be confirmed with the Save button.</p> <p>If the password field is left blank,the password remains the same.</p>"},{"location":"web-console/#user-detail","title":"User Detail","text":"<p>Fig. 51 Tasks  Administrator</p> <p>This page is the same as in the user's approach, extended by the following:</p> <ul> <li>New task</li> </ul> <p></p> <ul> <li>Clicking on the button displays a table in which it is necessary to fill in the data of the new task. The creation of a new task is confirmed by pressing the Save button. A new task is created with the status \"new\"</li> </ul> <p></p> <ul> <li> <p>Bulk task approval function</p> </li> <li> <p>To perform a bulk approval, you must first mark the tasks to be approved. By checking the box for the required tasks in the right column of the table.</p> </li> <li> <p>Only tasks with the status \"data provided\" can be approved.</p> </li> <li> <p>After pressing the Approve in bulk button, a dialog box is displayed, where after pressing the OK button, the bulk action will be performed.</p> </li> <li> <p>Approval of tasks changes their status to \"data checked\" and the acceptance status to \"Approved\".</p> </li> <li> <p>Photos</p> </li> <li> <p>The decoration Examined column graphically shows whether the photo checks were OK or not.</p> </li> <li> <p>This involves checking the correctness of the position and checking the originality of the photo.</p> </li> <li> <p>Complete control information is displayed in the task detail for each photo.</p> </li> </ul>"},{"location":"web-console/#task-detail","title":"Task Detail","text":"<p>Fig. 51 Task detail \u2013 Administrator view</p> <p>This page is the same as in the user's approach, extended by the following:</p>"},{"location":"web-console/#task-detail-actions","title":"Task Detail Actions","text":"<ul> <li> <p>Approve </p> </li> <li> <p>\"data checked\"and the reception status</p> </li> <li> <p>\"Approved\".</p> </li> <li> <p>Reject </p> <ul> <li> <p>This action is available with the status</p> </li> <li> <p>\"data provided\", and results in the rejection of a task.</p> </li> <li> <p>After pressing theReject button, a dialog box is displayed,where it is possible to enter a comment for rejection, and after pressing OK, the action will be performed.</p> </li> <li> <p>The result of the action is the setting of the status \"data checked\" and the acceptance status \"Rejected\".</p> </li> </ul> </li> <li> <p>Return to user </p> </li> <li> <p>This action is available with the status \"data provided\". It allows you to return the task to the user for completion.</p> </li> <li> <p>After pressing the Undo button, a dialog box is displayed, where it is possible to enter a comment to     be undone, and after pressing OK, the action will be performed.</p> </li> <li> <p>The result of the action is the setting of the status \"returned\".</p> </li> <li> <p>Move to \"data provided\" </p> </li> <li> <p>This event is available with an \"open\"status. It allows you to move the task to \"data provided\" status.</p> </li> <li> <p>After pressing the Move button, a dialog box is displayed, where it is possible to enter a comment,     and after pressing OK, the action will be performed.</p> </li> <li> <p>The result of the action is the     setting of the status \"data provided\". </p> </li> <li> <p>Delete</p> </li> <li> <p>This action is available with the status \"new\".     It allows you to delete a task.</p> </li> <li> <p>After pressing the Delete button, a dialog box is displayed, where after pressing OK the action is performed.</p> </li> <li> <p>The result of the action is deleting of the task.</p> </li> <li> <p>Verification of photos</p> </li> <li> <p>The Examined column graphically shows whether     the photo checks were OK or not.     This involves checking the correctness of the position and checking the originality of the photo.</p> </li> <li> <p>View complete photo review information</p> </li> <li> <p>The table of photo data shows the results of the performed checks in color.</p> </li> </ul>"},{"location":"web-console/#super-administrator","title":"Super-administrator","text":"<p>After logging in, the Agency management page is displayed.</p> <p></p> <p>Fig. 53 Agency management  </p>"},{"location":"web-console/#agency-list","title":"Agency list","text":"<p>This page offers the following features:</p> <ul> <li>Add new agency</li> </ul> <p></p> <ul> <li>Clicking on the button displays a table in which it is necessary to fill in the name of the new agency. The creation of the agency is confirmed by pressing the Save button.</li> </ul> <p></p> <p>Open detail of the agency by clicking on a row of specified agency.</p> <p> </p>"},{"location":"web-console/#agency-detail","title":"Agency detail","text":"<p>Fig. 54 Officers management</p>"},{"location":"web-console/#add-a-new-officer","title":"Add a new officer","text":"<ul> <li> <p>By clicking on the button, a table is displayed in which it is necessary to fill in the data of the new officer. The creation of a new officer is confirmed by pressing the Save button.</p> </li> <li> <p>The entered login and password will be used by the user to access the application.</p> </li> </ul> <p></p>"},{"location":"web-console/#edit-an-existing-officer","title":"Edit an existing officer","text":"<ul> <li> <p>Clicking the button displays the same table as when creating a new officer. In this case, the table is pre * populated with the data of the selected officer. The data can be edited in the table (except for the login) and their modification can be confirmed with the Save button.</p> </li> <li> <p>If the password field is left blank,the password remains the same.</p> </li> </ul>"},{"location":"web-console/#deactivate-an-existing-officer","title":"Deactivate an existing officer","text":"<ul> <li> <p>After pressing the Deactivate button, a dialog box is displayed, where after pressing OK the action is performed.</p> </li> <li> <p>The result of the action is deactivation of the selected officer.</p> </li> <li> <p>The deactivated officer will be no more able to log in into application.</p> </li> </ul>"},{"location":"web-console/#appendix-a-hosting-and-installing-the-web-console","title":"Appendix A: Hosting and installing the web console","text":""},{"location":"web-console/#hosting-requirements","title":"Hosting requirements","text":"<ul> <li>Php7 engine</li> <li>MySQL 8 database server</li> <li>Apache2 webserver</li> </ul>"},{"location":"web-console/#server-resources-requirements","title":"Server resources requirements","text":"<ul> <li>min 8GB RAM</li> <li>min 2 core cpu</li> <li>min 10GB disk space</li> </ul>"},{"location":"web-console/#installation-steps-for-the-webconsole","title":"Installation steps for the webconsole","text":"<p>copy the web console files into the selected webroot directory create VirtualHost section in the Apache2 configuration and point it to selected directory make sure that there is set a directive DirectoryIndex index.php</p> <p>write the database name, database user and the corresponding password into the web console configuration file _includes.php</p> <pre><code>switch (SERVER) {\n  case 'UAT':\n    define('SYSTEM_HOST', '&lt;https://mybohostname&gt;');\n    define('DB_TYPE', 'mysqli');\n    define('DB_HOST', 'localhost');\n    define('DB_USER', 'root');\n    define('DB_PASSWORD', 'xxxx');\n    define('DB_SCHEMA', 'egnss4all');\n    break;\n</code></pre> <pre><code> case 'LOCALHOST':\n    define('SYSTEM_HOST', '&lt;https://mybohostname&gt;');\n    define('DB_TYPE', 'mysqli');\n    define('DB_HOST', 'localhost');\n    define('DB_USER', 'xxxx');\n    define('DB_PASSWORD', 'xxxx');\n    define('DB_SCHEMA', 'egnss4all');\n    ini_set('display_errors', 0);\n    break;\n}\n</code></pre> <p>run\u00a0http://your * domain.tld</p>"},{"location":"web-console/#appendix-b-developer-documentation","title":"Appendix B: Developer Documentation","text":""},{"location":"web-console/#technologies","title":"Technologies","text":"<ul> <li>OOP PHP (Object * Oriented Programming)</li> <li>TWIG templates</li> <li>MySQL database</li> <li>DIBI framework for DB query</li> <li>HTML, CSS, Javascript</li> <li>Bootstrap 4.4.1 framework, jquery framework</li> <li>Google maps API</li> <li>MPDF framework for generating PDF</li> <li>html2canvas.js plugin</li> </ul>"},{"location":"web-console/#classes-description","title":"Classes description","text":"<ul> <li>Index</li> <li>managing farmers</li> <li>loading farmer list and tasks</li> <li>login</li> <li>login user</li> <li>logout user</li> <li>verifying users</li> <li>task</li> <li>adding tasks</li> <li>loading task info and photos</li> <li>accepting, declining and deleting tasks</li> <li>changing task status</li> <li>loading photos and photos metadata</li> <li>loading shapes</li> <li>assign unassigned photos to task</li> <li>generating PDF</li> <li>user</li> <li>managing users and roles</li> <li>loading the unassigned photos and tasks of users</li> <li>managing photo rotation</li> </ul>"},{"location":"web-console/#structure","title":"Structure","text":"<ul> <li>CSS</li> <li>cascade styles for web pages</li> <li>ENGINE</li> <li>framework and classes</li> <li>FONTS</li> <li>fonts for web pages</li> <li>IMG</li> <li>images for web</li> <li>JS</li> <li>javascript files for web and map</li> <li>PHOTOS</li> <li>photos downloaded from phones</li> <li>TEMPLATES</li> <li>TWIG templates for web</li> <li>VENDOR</li> <li>frameworks</li> </ul>"},{"location":"web-console/#web-services-and-database","title":"Web Services and Database","text":"<p>Below is a technical overview of the implemented web services for the PIC2BIM application and their features.</p>"},{"location":"web-console/#installation-web-services","title":"Installation Web Services","text":"<p>https://github.com/buildvoc/EGNSS4ALLSERVICES</p> <ul> <li>Install PHP version 8, enable GDI module in PHP</li> <li>Install Apache2</li> <li>Install MySql Database following instructions on https://github.com/buildvoc/EGNSS4ALLDATABASE</li> <li>Copy project files in a web accessible directory of Apache</li> <li>Modify the file engine/db_fx.php accordingly to your MySql database setup</li> <li>Create a writable by apache directory named \"photos4all\" on the same level of the project main path</li> </ul>"},{"location":"web-console/#installation-database","title":"Installation Database","text":"<ul> <li>Install MySql database 8</li> <li>Create a Database named \"egnss4all\"</li> <li>Import sql file into mysql to init database</li> </ul>"},{"location":"web-console/#check-user-by-login-and-pswd","title":"check user by login and pswd","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_login.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>login \u2013 string(255)</li> <li>pswd  *  string(255)</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>user \u2013 number \u2013 user ID for login, if exists</li> </ul> </li> </ul>"},{"location":"web-console/#sends-geometry-shapes-for-rectangle","title":"sends geometry shapes for rectangle","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_shapes.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>max_lat \u2013 float</li> <li>min_lat \u2013 float</li> <li>max_lng \u2013 float</li> <li>min_lng \u2013 float</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>shapes \u2013 array</li> <li>identificator \u2013 string \u2013 shape identificator</li> <li>wgs_geometry \u2013 json \u2013 geometry of shape</li> </ul> </li> </ul>"},{"location":"web-console/#sends-photos-for-task-or-user","title":"sends photos for task or user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_task_photos.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>task_id \u2013 number \u2013 task identificator</li> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photos \u2013 array</li> <li>note \u2013 string \u2013 user note</li> <li>lat \u2013 float \u2013 latitude of photo</li> <li>lng \u2013 float \u2013 longitute of photo</li> <li>photo_heading \u2013 number \u2013 photo azimuth</li> <li>created \u2013 datetime \u2013 date and time of photo creation</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> <li>digest \u2013 string \u2013 hash of photo</li> </ul> </li> </ul>"},{"location":"web-console/#sends-tasks-for-user","title":"sends tasks for user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_tasks.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>tasks \u2013 array</li> <li>id \u2013 number \u2013 task identificator</li> <li>status \u2013 string \u2013 task status</li> <li>name \u2013 string \u2013 task name</li> <li>text \u2013 string \u2013 description of task</li> <li>text_returned \u2013 string \u2013 description why is returned</li> <li>date_created \u2013 datetime \u2013 date of create task</li> <li>task_due_date \u2013 datetime \u2013 task due date</li> <li>note \u2013 string \u2013 task note</li> <li>number_of_photos \u2013 number \u2013 number of photos for task</li> <li>flag_valid \u2013 string \u2013 task is accepted</li> <li>flag_invalid \u2013 string \u2013 task is declined</li> <li>photos_ids \u2013 array of numbers \u2013 IDs of task photos</li> </ul> </li> </ul>"},{"location":"web-console/#receive-task-data-from-phone","title":"receive task data from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_update.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters</li> <li>task_id \u2013 number \u2013 task identificator</li> <li>user_id \u2013 number \u2013 user identificator</li> <li>status \u2013 string \u2013 task statuses</li> <li>note \u2013 string \u2013 task note</li> <li>photos \u2013 array<ul> <li>note \u2013 string \u2013 photo note</li> <li>lat \u2013 float \u2013 photo latitude</li> <li>lng \u2013 float \u2013 photo longitude</li> <li>altitude</li> <li>bearing</li> <li>magnetic_azimuth</li> <li>photo_heading</li> <li>pitch</li> <li>roll</li> <li>photo_angle</li> <li>orientation</li> <li>horizontalViewAngle</li> <li>verticalViewAngle</li> <li>accuracy</li> <li>deviceManufacture</li> <li>deviceModel</li> <li>devicePlatform</li> <li>deviceVersion</li> <li>satsInfo</li> <li>extraSatCount</li> <li>NMEAMessage</li> <li>networkInfo</li> <li>created \u2013 datetime \u2013 date of photo creation</li> <li>digest \u2013 string \u2013 photo hash</li> <li>efkLatGpsL1</li> <li>efkLngGpsL1</li> <li>efkAltGpsL1</li> <li>efkTimeGpsL1</li> <li>efkLatGpsL5</li> <li>efkLngGpsL5</li> <li>efkAltGpsL5</li> <li>efkTimeGpsL5</li> <li>efkLatGpsIf</li> <li>efkLngGpsIf</li> <li>efkAltGpsIf</li> <li>efkTimeGpsIf</li> <li>efkLatGalE1</li> <li>efkLngGalE1</li> <li>efkAltGalE1</li> <li>efkTimeGalE1</li> <li>efkLatGalE5</li> <li>efkLng GalE5</li> <li>efkAlt GalE5</li> <li>efkTimeGalE5</li> <li>efkLatGalIf</li> <li>efkLngGalIf</li> <li>efkAltGalIf</li> <li>efkTimeGalIf</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> </ul> </li> </ul>"},{"location":"web-console/#sends-paths-for-user","title":"sends paths for user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_get_paths.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON</li> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>paths \u2013 array</li> <li>id \u2013 number \u2013 identificator</li> <li>name  *  string</li> <li>start \u2013 datetime \u2013 start of tracking datetime</li> <li>end \u2013 datetime \u2013 end of tracking datetime</li> <li>area \u2013 float \u2013 path area in m2</li> <li>device_manufacture  *  string</li> <li>device_model  *  string</li> <li>device_platform  *  string</li> <li>device_version  *  string</li> <li>points \u2013 array<ul> <li>id \u2013 number \u2013 identificator</li> <li>lat  *  float</li> <li>lng  *  float</li> <li>altitude  *  float</li> <li>accuracy  *  float</li> <li>created  *  datetime</li> </ul> </li> </ul>"},{"location":"web-console/#sends-photo-by-id","title":"sends photo by ID","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_get_photo.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>photo_id \u2013 number \u2013 photo identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photo \u2013 object</li> <li>note \u2013 string \u2013 photo note</li> <li>lat \u2013 float \u2013 photo lattitude</li> <li>lng \u2013 float \u2013 photo longitude</li> <li>photo_heading \u2013 number \u2013 heading in degrees</li> <li>created \u2013 datetime</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> <li>digest \u2013 string \u2013 photo hash</li> </ul> </li> </ul>"},{"location":"web-console/#receive-path-from-phone","title":"receive path from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_path.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> <li>name  *  string</li> <li>start \u2013 datetime \u2013 start of tracking datetime</li> <li>end \u2013 datetime \u2013 end of tracking datetime</li> <li>area \u2013 float \u2013 path area in m2</li> <li>device_manufacture  *  string</li> <li>device_model  *  string</li> <li>device_platform  *  string</li> <li>device_version  *  string</li> <li>points \u2013 array</li> <li>lat  *  float</li> <li>lng  *  float</li> <li>altitude  *  float</li> <li>accuracy  *  float</li> <li>created  *  datetime</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>path_id \u2013 number \u2013 ID of received path</li> </ul> </li> </ul>"},{"location":"web-console/#receive-photo-data-from-phone","title":"receive photo data from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_photo.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>task_id \u2013 number \u2013 task identificator</li> <li>user_id \u2013 number \u2013 user identificator</li> <li>photos \u2013 array</li> <li>note \u2013 string \u2013 photo note</li> <li>lat \u2013 float \u2013 photo latitude</li> <li>lng \u2013 float \u2013 photo longitude</li> <li>centroidLat</li> <li>centroidLng</li> <li>altitude</li> <li>bearing</li> <li>magnetic_azimuth</li> <li>photo_heading</li> <li>pitch</li> <li>roll</li> <li>photo_angle</li> <li>orientation</li> <li>horizontalViewAngle</li> <li>verticalViewAngle</li> <li>accuracy</li> <li>deviceManufacture</li> <li>deviceModel</li> <li>devicePlatform</li> <li>deviceVersion</li> <li>satsInfo</li> <li>extraSatCount</li> <li>NMEAMessage</li> <li>networkInfo</li> <li>created \u2013 datetime \u2013 date of photo creation</li> <li>digest \u2013 string \u2013 photo hash</li> <li>efkLatGpsL1</li> <li>efkLngGpsL1</li> <li>efkAltGpsL1</li> <li>efkTimeGpsL1</li> <li>efkLatGpsL5</li> <li>efkLngGpsL5</li> <li>efkAltGpsL5</li> <li>efkTimeGpsL5</li> <li>efkLatGpsIf</li> <li>efkLngGpsIf</li> <li>efkAltGpsIf</li> <li>efkTimeGpsIf</li> <li>efkLatGalE1</li> <li>efkLngGalE1</li> <li>efkAltGalE1</li> <li>efkTimeGalE1</li> <li>efkLatGalE5</li> <li>efkLng GalE5</li> <li>efkAlt GalE5</li> <li>efkTimeGalE5</li> <li>efkLatGalIf</li> <li>efkLngGalIf</li> <li>efkAltGalIf</li> <li>efkTimeGalIf</li> <li>photo \u2013 string \u2013 base64 encoded photo</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photo_id \u2013 number \u2013 ID of received photo</li> </ul> </li> </ul>"},{"location":"web-console/#receive-task-data-from-phone_1","title":"receive task data from phone","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_status.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>task_id \u2013 number \u2013 task identificator</li> <li>status \u2013 string \u2013 task statuses</li> <li>note \u2013 string \u2013 task note</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> </ul> </li> </ul>"},{"location":"web-console/#sends-ids-of-unassigned-photos-for-user","title":"sends IDs of unassigned photos for user","text":"<p>https://pic2bim.co.uk/egnss4allservices/comm_unassigned.php</p> <ul> <li>input</li> <li>HTTPS, POST</li> <li>parameters<ul> <li>user_id \u2013 number \u2013 user identificator</li> </ul> </li> <li>output</li> <li>JSON<ul> <li>status \u2013 string  *  ok/error</li> <li>error_msg \u2013 string \u2013 error message if an error occurs</li> <li>photos_ids \u2013 array of numbers \u2013 IDs of unassigned photos</li> </ul> </li> </ul>"},{"location":"guides/Concept/","title":"Concept","text":""},{"location":"guides/Concept/#json-file","title":"JSON file","text":"<p>The python plugin for Material for #MkDocs creates a <code>graph.json</code> file, which will be used by ECharts javascript. </p> <p>You can find the #JSON file for this example site here: graph.json</p>"},{"location":"guides/field-inspection-onsite/","title":"Field Inspection Onsite","text":""},{"location":"guides/field-inspection-onsite/#onsite-inspection-mobile-app","title":"Onsite Inspection Mobile App","text":"<ol> <li>see http://preview.pic2bim.co.uk/#getting-started </li> </ol>"},{"location":"guides/field-inspection-supervisor/","title":"Field Inspection Supervisor","text":""},{"location":"guides/field-inspection-supervisor/#supervisor-role-web-console","title":"Supervisor Role Web Console","text":"<p>This quickstart guide takes the mananger through the process of mananging tasks for site inspections. 1.  As supervisor/site manager login to web console login to web console 2. Select a user and create a new task</p>"},{"location":"guides/guides/","title":"How to Guides","text":""},{"location":"guides/guides/#current-quick-start-guides","title":"Current Quick Start Guides","text":"<ol> <li>Field Inspection Supervisor</li> <li>Field Inspection Onsite</li> </ol>"}]}